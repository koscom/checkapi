<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>CHECK API 활용</title>
<link>https://koscom.github.io/checkapi/</link>
<atom:link href="https://koscom.github.io/checkapi/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.5.14</generator>
<lastBuildDate>Mon, 05 Feb 2024 15:00:00 GMT</lastBuildDate>
<item>
  <title>CHECK-API 목록 : 업종/지수 정보</title>
  <link>https://koscom.github.io/checkapi/posts/0009_api_index/</link>
  <description><![CDATA[ 




<section id="check-api-목록-업종지수-정보" class="level1 page-columns page-full">
<h1>CHECK-API 목록 : 업종/지수 정보</h1>
<p>본 글에서는 CHECK-API 중 업종/지수 정보와 관련된 API 목록과 제공 데이터를 소개합니다.</p>
<section id="업종지수-관련-api의-구성" class="level2">
<h2 class="anchored" data-anchor-id="업종지수-관련-api의-구성">업종/지수 관련 API의 구성</h2>
<p>업종/지수 관련 API는 크게 다음과 같이 구성됩니다.</p>
<ul>
<li><p>주식관련 정보는 크게 나누어 종목 정보와 지수/업종 정보로 나누어 제공합니다. 여기에서는 업종/지수 정보에 대해 설명하며 업종/지수 정보는 별도의 페이지에서 설명합니다.</p></li>
<li><p>업종/지수 정보는 유가증권시장 업종/지수과 코스닥시장 업종/지수에 대한 정보는 각각 별도의 API로 제공합니다.</p></li>
<li><p>kquant 패키지의 일부 함수는 사용자 편의를 위해 유가증권시장 업종/지수와 코스닥시장 업종/지수에 대한 정보를 동일한 함수로 제공하며 함수 내부에서 시장을 스스로 구분하여 해당하는 API를 호출합니다.</p></li>
<li><p>kquant 패키지는 업종/지수 시장 구분 이외에도 사용자 편의를 위해 유사한 복수의 API를 하나의 함수로 인수를 달리하여 구할 수 있도록 제공하는 경우가 있습니다.</p></li>
<li><p>kquant 패키지는 현재 개발 중인 베타 버전으로 모든 CHECK-API 정보를 제공하지 않을 수 있습니다. 향후 모든 CHECK-API 정보를 사용할 수 있도록 지속적으로 개발중입니다.</p></li>
<li><p>kquant 패키지의 출력은 사용자 편의를 위해 원래 CHECK-API와 출력 필드의 구성 및 데이터 타입을 다르게 제공할 수 있습니다. 설명서를 읽고 사용에 주의하시기 바랍니다.</p></li>
</ul>
</section>
<section id="카테고리" class="level2">
<h2 class="anchored" data-anchor-id="카테고리">카테고리</h2>
<p>업종/지수에 대해 다음과 같은 카테고리의 정보를 제공합니다.</p>
<table class="table">
<colgroup>
<col style="width: 20%">
<col style="width: 80%">
</colgroup>
<thead>
<tr class="header">
<th>구분</th>
<th>제공 정보</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>코드 정보</td>
<td>업종/지수별 코드 및 업종/지수명</td>
</tr>
<tr class="even">
<td>기본 정보</td>
<td>단일 업종/지수에 대해 호출 시점의 당일 시가/고가/저가/현재가, 거래량, 거래 대금, 등락 등의 정보</td>
</tr>
<tr class="odd">
<td>일중 정보</td>
<td>일자별 1분/10초/1초 간격 시가/고가/저가/종가 등의 정보 (10초/1초 정보는 호출 당일만 제공)</td>
</tr>
<tr class="even">
<td>일별 정보</td>
<td>일자별 시가/고가/저가/현재가(종가), 거래량, 거래 대금, 시가총액, 상장 주식수 등의 정보</td>
</tr>
<tr class="odd">
<td>일별 투자자 정보</td>
<td>업종/지수별 과거 일자별 투자자 매매 정보</td>
</tr>
</tbody>
</table>
</section>
<section id="api-url-및-kquant-함수" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="api-url-및-kquant-함수">API URL 및 kquant 함수</h2>
<p>정보의 시점이나 시장 등에 따른 세부 API URL 및 kquant 함수는 다음과 같습니다.</p>
<div class="column-page">
<table class="table">
<colgroup>
<col style="width: 12%">
<col style="width: 7%">
<col style="width: 14%">
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 17%">
</colgroup>
<thead>
<tr class="header">
<th>구분</th>
<th>업종/지수</th>
<th>시점</th>
<th>유가증권시장 API URL</th>
<th>코스닥시장 API URL</th>
<th>kquant 함수</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>코드</td>
<td>전종목</td>
<td>호출 시점</td>
<td><code>/stock/m002/code_info</code></td>
<td><code>/stock/m004/code_info</code></td>
<td><code>symbol_index</code></td>
</tr>
<tr class="even">
<td>기본</td>
<td>단일</td>
<td>호출 시점</td>
<td><code>/stock/m002/basic_info</code></td>
<td><code>/stock/m004/basic_info</code></td>
<td><code>info_basic_index</code></td>
</tr>
<tr class="odd">
<td>체결</td>
<td>단일</td>
<td>당일 호출 시점까지</td>
<td><code>/stock/m002/tick_info</code></td>
<td><code>/stock/m004/tick_info</code></td>
<td><code>trade_index</code></td>
</tr>
<tr class="even">
<td>일중(10초)</td>
<td>단일</td>
<td>당일 호출 시점까지</td>
<td><code>/stock/m002/intra_info</code></td>
<td><code>/stock/m004/intra_info</code></td>
<td><code>intra_index</code></td>
</tr>
<tr class="odd">
<td>일중(분)</td>
<td>단일</td>
<td>과거 일자별</td>
<td><code>/stock/m002/intra_date</code></td>
<td><code>/stock/m004/intra_date</code></td>
<td><code>intra_index</code></td>
</tr>
<tr class="even">
<td>일별</td>
<td>단일</td>
<td>과거 일자별</td>
<td><code>/stock/m002/hist_info</code></td>
<td><code>/stock/m004/hist_info</code></td>
<td><code>daily_index</code></td>
</tr>
<tr class="odd">
<td>일별 투자자</td>
<td>단일</td>
<td>과거 일자별</td>
<td><code>/stock/m002/invest_hist_info</code></td>
<td><code>/stock/m004/invest_hist_info</code></td>
<td><code>daily_investor_index</code></td>
</tr>
</tbody>
</table>
</div>


</section>
</section>

 ]]></description>
  <category>CHECK-API 목록</category>
  <category>kquant 패키지</category>
  <category>업종/지수 정보</category>
  <guid>https://koscom.github.io/checkapi/posts/0009_api_index/</guid>
  <pubDate>Mon, 05 Feb 2024 15:00:00 GMT</pubDate>
  <media:content url="https://koscom.github.io/checkapi/posts/0009_api_index/CHECK_API_logo.png" medium="image" type="image/png" height="22" width="144"/>
</item>
<item>
  <title>CHECK-API 목록 : 주식 정보</title>
  <link>https://koscom.github.io/checkapi/posts/0008_api_stock/</link>
  <description><![CDATA[ 




<section id="check-api-목록-주식-정보" class="level1 page-columns page-full">
<h1>CHECK-API 목록 : 주식 정보</h1>
<p>본 글에서는 CHECK-API 중 주식 정보와 관련된 API 목록과 제공 데이터를 소개합니다.</p>
<section id="주식-관련-api의-구성" class="level2">
<h2 class="anchored" data-anchor-id="주식-관련-api의-구성">주식 관련 API의 구성</h2>
<p>주식 관련 API는 크게 다음과 같이 구성됩니다.</p>
<ul>
<li><p>주식관련 정보는 크게 나누어 종목 정보와 지수/업종 정보로 나누어 제공합니다. 여기에서는 종목 정보에 대해 설명하며 지수/업종 정보는 별도의 페이지에서 설명합니다.</p></li>
<li><p>종목 정보는 유가증권시장 종목과 코스닥시장 종목에 대한 정보는 각각 별도의 API로 제공합니다.</p></li>
<li><p>kquant 패키지의 일부 함수는 사용자 편의를 위해 유가증권시장 종목과 코스닥시장 종목에 대한 정보를 동일한 함수로 제공하며 함수 내부에서 시장을 스스로 구분하여 해당하는 API를 호출합니다.</p></li>
<li><p>kquant 패키지는 종목의 시장 구분 이외에도 사용자 편의를 위해 유사한 복수의 API를 하나의 함수로 인수를 달리하여 구할 수 있도록 제공하는 경우가 있습니다.</p></li>
<li><p>kquant 패키지는 현재 개발 중인 베타 버전으로 모든 CHECK-API 정보를 제공하지 않을 수 있습니다. 향후 모든 CHECK-API 정보를 사용할 수 있도록 지속적으로 개발중입니다.</p></li>
<li><p>kquant 패키지의 출력은 사용자 편의를 위해 원래 CHECK-API와 출력 필드의 구성 및 데이터 타입을 다르게 제공할 수 있습니다. 설명서를 읽고 사용에 주의하시기 바랍니다.</p></li>
</ul>
</section>
<section id="카테고리" class="level2">
<h2 class="anchored" data-anchor-id="카테고리">카테고리</h2>
<p>각각의 주식 시장에 대해 다음과 같은 카테고리의 정보를 제공합니다.</p>
<table class="table">
<colgroup>
<col style="width: 20%">
<col style="width: 80%">
</colgroup>
<thead>
<tr class="header">
<th>구분</th>
<th>제공 정보</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>코드 정보</td>
<td>종목별 국제표준코드(ISIN), 단축코드, 종목명, 호출 당일의 주식통합시장조치</td>
</tr>
<tr class="even">
<td>기본 정보</td>
<td>단일 종목 혹은 복수 종목에 대해 호출 시점의 당일 시가/고가/저가/현재가, 거래량, 거래 대금, 등락 등의 정보</td>
</tr>
<tr class="odd">
<td>종합 정보</td>
<td>단일 종목에 대해 호출 시점의 기본 정보와 재무 정보 등의 추가 정보</td>
</tr>
<tr class="even">
<td>호가 정보</td>
<td>호출 시점의 10단계의 매도호가/매수호가 및 해당 호가의 잔량 등의 정보</td>
</tr>
<tr class="odd">
<td>체결 정보</td>
<td>당일 호출 시점까지의 체결 시간/가격/거래량 등의 틱 데이터(tick data) 정보 (과거 일자 정보는 제공하지 않음)</td>
</tr>
<tr class="even">
<td>일중 가격 정보</td>
<td>일자별 1분/10초 간격 시가/고가/저가/종가 등의 정보 (10초 정보는 호출 당일만 제공)</td>
</tr>
<tr class="odd">
<td>일별 가격 정보</td>
<td>일자별 시가/고가/저가/현재가(종가), 거래량, 거래 대금, 시가총액, 상장 주식수 등의 정보</td>
</tr>
<tr class="even">
<td>일별 대량매매 정보</td>
<td>일자별 종목별 대량매매 정보</td>
</tr>
<tr class="odd">
<td>일별 공매도 정보</td>
<td>일자별 종목별 공매도 거래량, 거래대금, 잔고 등의 정보</td>
</tr>
<tr class="even">
<td>일별 대차잔고 정보</td>
<td>일자별 종목별 대차잔고 정보</td>
</tr>
<tr class="odd">
<td>일별 신용잔고 정보</td>
<td>일자별 종목별 신용잔고 정보</td>
</tr>
<tr class="even">
<td>일별 회원사 정보</td>
<td>일자별 회원사별 거래량 및 거래대금 정보</td>
</tr>
<tr class="odd">
<td>순위 정보</td>
<td>과거 요청기간의 전종목의 대량매매, 공매도, 대차거래, 투자자 순위 정보</td>
</tr>
</tbody>
</table>
</section>
<section id="api-url-및-kquant-함수" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="api-url-및-kquant-함수">API URL 및 kquant 함수</h2>
<p>정보의 시점이나 시장 등에 따른 세부 API URL 및 kquant 함수는 다음과 같습니다.</p>
<div class="column-page">
<table class="table">
<colgroup>
<col style="width: 12%">
<col style="width: 7%">
<col style="width: 14%">
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 17%">
</colgroup>
<thead>
<tr class="header">
<th>구분</th>
<th>종목</th>
<th>시점</th>
<th>유가증권시장 API URL</th>
<th>코스닥시장 API URL</th>
<th>kquant 함수</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>코드</td>
<td>전종목</td>
<td>호출 시점</td>
<td><code>/stock/m001/code_info</code></td>
<td><code>/stock/m003/code_info</code></td>
<td><code>symbol_stock</code></td>
</tr>
<tr class="even">
<td>기본</td>
<td>단일</td>
<td>호출 시점</td>
<td><code>/stock/m001/basic_info</code></td>
<td><code>/stock/m003/basic_info</code></td>
<td><code>info_basic_stock</code></td>
</tr>
<tr class="odd">
<td>기본</td>
<td>복수</td>
<td>호출 시점</td>
<td><code>/stock/m001/basic_info_port</code></td>
<td><code>/stock/m003/basic_info_port</code></td>
<td><code>info_basic_stocks</code></td>
</tr>
<tr class="even">
<td>종합</td>
<td>단일</td>
<td>호출 시점</td>
<td><code>/stock/m001/basic_info_all</code></td>
<td><code>/stock/m003/basic_info_all</code></td>
<td><code>info_stock</code></td>
</tr>
<tr class="odd">
<td>종합</td>
<td>복수</td>
<td>호출 시점</td>
<td>-</td>
<td>-</td>
<td><code>info_stocks</code></td>
</tr>
<tr class="even">
<td>순위</td>
<td>전종목</td>
<td>호출 시점</td>
<td><code>/stock/m001/rank</code></td>
<td><code>/stock/m003/rank</code></td>
<td><code>rank_stocks</code></td>
</tr>
<tr class="odd">
<td>호가</td>
<td>단일</td>
<td>호출 시점</td>
<td><code>/stock/m001/hoga_info</code></td>
<td><code>/stock/m003/hoga_info</code></td>
<td><code>quote_stock</code></td>
</tr>
<tr class="even">
<td>체결</td>
<td>단일</td>
<td>당일 호출 시점까지</td>
<td><code>/stock/m001/tick_info</code></td>
<td><code>/stock/m003/tick_info</code></td>
<td><code>trade_stock</code></td>
</tr>
<tr class="odd">
<td>일중(10초)</td>
<td>단일</td>
<td>당일 호출 시점까지</td>
<td><code>/stock/m001/intra_info</code></td>
<td><code>/stock/m003/intra_info</code></td>
<td><code>intra_stock</code></td>
</tr>
<tr class="even">
<td>일중(분)</td>
<td>단일</td>
<td>과거 일자별</td>
<td><code>/stock/m001/intra_date</code></td>
<td><code>/stock/m003/intra_date</code></td>
<td><code>intra_stock</code></td>
</tr>
<tr class="odd">
<td>일별 가격</td>
<td>단일</td>
<td>과거 일자별</td>
<td><code>/stock/m001/hist_info</code></td>
<td><code>/stock/m003/hist_info</code></td>
<td><code>daily_stock</code></td>
</tr>
<tr class="even">
<td>일별 대량매매</td>
<td>단일</td>
<td>과거 일자별</td>
<td><code>/stock/m001/mass_hist_info</code></td>
<td><code>/stock/m003/mass_hist_info</code></td>
<td><code>daily_block_stock</code></td>
</tr>
<tr class="odd">
<td>일별 공매도</td>
<td>단일</td>
<td>과거 일자별</td>
<td><code>/stock/m001/short_hist_info</code></td>
<td><code>/stock/m003/short_hist_info</code></td>
<td><code>daily_short_stock</code></td>
</tr>
<tr class="even">
<td>일별 대차잔고</td>
<td>단일</td>
<td>과거 일자별</td>
<td><code>/stock/m001/loan_hist_info</code></td>
<td><code>/stock/m003/loan_hist_info</code></td>
<td><code>daily_lend_stock</code></td>
</tr>
<tr class="odd">
<td>일별 신용잔고</td>
<td>단일</td>
<td>과거 일자별</td>
<td><code>/stock/m001/credit_hist_info</code></td>
<td><code>/stock/m001/credit_hist_info</code></td>
<td><code>daily_margin_stock</code></td>
</tr>
<tr class="even">
<td>기간 대량매매</td>
<td>전종목</td>
<td>과거 기간합산</td>
<td><code>/stock/m001/rank_mass_date</code></td>
<td><code>/stock/m003/rank_mass_date</code></td>
<td><code>sum_block_stocks</code></td>
</tr>
<tr class="odd">
<td>기간 공매도</td>
<td>전종목</td>
<td>과거 기간합산</td>
<td><code>/stock/m001/rank_short_date</code></td>
<td><code>/stock/m003/rank_short_date</code></td>
<td><code>sum_short_stocks</code></td>
</tr>
<tr class="even">
<td>기간 투자자</td>
<td>전종목</td>
<td>과거 기간합산</td>
<td><code>/stock/m001/rank_invest_date</code></td>
<td><code>/stock/m001/rank_invest_date</code></td>
<td><code>sum_investor_stocks</code></td>
</tr>
<tr class="odd">
<td>기간 회원사</td>
<td>회원사</td>
<td>과거 기간합산</td>
<td><code>/stock/m001/member_date</code></td>
<td><code>/stock/m001/member_date</code></td>
<td><code>sum_broker_stocks</code></td>
</tr>
</tbody>
</table>
</div>


</section>
</section>

 ]]></description>
  <category>CHECK-API 목록</category>
  <category>kquant 패키지</category>
  <category>주식 정보</category>
  <guid>https://koscom.github.io/checkapi/posts/0008_api_stock/</guid>
  <pubDate>Sun, 28 Jan 2024 15:00:00 GMT</pubDate>
  <media:content url="https://koscom.github.io/checkapi/posts/0008_api_stock/CHECK_API_logo.png" medium="image" type="image/png" height="22" width="144"/>
</item>
<item>
  <title>kquant 패키지 소개</title>
  <link>https://koscom.github.io/checkapi/posts/0007_kquant_intro/</link>
  <description><![CDATA[ 




<section id="kquant-패키지-소개" class="level1">
<h1>kquant 패키지 소개</h1>
<p>본 글에서는 파이썬에서 CHECK-API 사용을 쉽게 할 수 있도록 도와주는 kquant 패키지를 소개합니다.</p>
<section id="준비사항" class="level2">
<h2 class="anchored" data-anchor-id="준비사항">준비사항</h2>
<p>여기에서는 컴퓨터에 이미 파이썬 배포판과 주피터랩이 설치되어 있다고 가정합니다.</p>
<p>만약 파이썬 배포판이 설치되어 있지 않은 경우에는 다음 블로그 글을 참고하여 설치해 주세요.</p>
<ul>
<li><a href="../../posts/0002_env_install_1/index.html" target="_blank">환경 구축 1 : 파이썬 설치</a></li>
</ul>
<p>파이썬 패키지의 설치 및 관리 방법에 대해서는 다음 블로그 글을 참고해 주세요.</p>
<ul>
<li><a href="../../posts/0003_env_install_2/index.html" target="_blank">환경 구축 2 : 파이썬 패키지 설치</a></li>
</ul>
<p>주피터랩이 설치되어 있지 않은 경우에는 다음 블로그 글을 참고하여 설치해 주세요.</p>
<ul>
<li><a href="../../posts/0004_env_install_3/index.html" target="_blank">환경 구축 3 : 주피터랩 설치 및 사용</a></li>
</ul>
<p>본 설명글은 주피터랩에서 노트북으로 진행합니다.</p>
</section>
</section>
<section id="패키지-소개" class="level1">
<h1>패키지 소개</h1>
<p><code>kquant</code> 패키지는 코스콤에서 개발한 금융데이터 분석용 파이썬 패키지로 다음과 같은 기능을 제공합니다.</p>
<section id="check-api-기능에-대한-파이썬-래핑wrapping-함수-제공" class="level3">
<h3 class="anchored" data-anchor-id="check-api-기능에-대한-파이썬-래핑wrapping-함수-제공">1. CHECK-API 기능에 대한 파이썬 래핑(wrapping) 함수 제공</h3>
<p>kquant 패키지는 requests 등의 파이썬 패키지를 사용하여 CHECK-API를 호출하고 pandas 데이터프레임에 결과를 정리하여 출력하는 기능을 파이썬 함수로 미리 구현하여 제공합니다.</p>
<p>예를 들어 삼성전자의 2023년 상반기의 일간 시세를 받아 pandas 데이터프레임에 정리하려면 다음과 같은 코드를 사용자가 직접 작성해야 합니다.</p>
<div id="89f4a4ba" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. CHECK API 정보</span></span>
<span id="cb1-2">CHECK_API_ID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id_xxxxxxx"</span></span>
<span id="cb1-3">CHECK_API_KEY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"key_xxxxxxx"</span></span></code></pre></div>
</div>
<div id="954148a9" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. 삼성전자 일간시세 정보용 API 호출</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> requests <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> post</span>
<span id="cb2-4"></span>
<span id="cb2-5">host_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://checkapi.koscom.co.kr"</span></span>
<span id="cb2-6">api_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/stock/m001/hist_info"</span></span>
<span id="cb2-7">payload <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb2-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cust_id"</span>: CHECK_API_ID,</span>
<span id="cb2-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auth_key"</span>: CHECK_API_KEY,</span>
<span id="cb2-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jcode"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"005930"</span>,</span>
<span id="cb2-11">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sdate"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20230101"</span>,</span>
<span id="cb2-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"edate"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20230630"</span>,</span>
<span id="cb2-13">}</span>
<span id="cb2-14"></span>
<span id="cb2-15">r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> post(host_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> api_url, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>payload)</span>
<span id="cb2-16">results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.json()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"results"</span>]</span></code></pre></div>
</div>
<div id="120ad9ac" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3 결과 데이터를 pandas 데이터프레임으로 정리</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb3-4"></span>
<span id="cb3-5">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(results)</span>
<span id="cb3-6">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.rename(</span>
<span id="cb3-7">    columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb3-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F12506"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>,</span>
<span id="cb3-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F16013"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SYMBOL"</span>,</span>
<span id="cb3-10">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F15009"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OPEN"</span>,</span>
<span id="cb3-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F15010"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HIGH"</span>,</span>
<span id="cb3-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F15011"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LOW"</span>,</span>
<span id="cb3-13">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F15001"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CLOSE"</span>,</span>
<span id="cb3-14">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F15015"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"VOLUME"</span>,</span>
<span id="cb3-15">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F15023"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AMOUNT"</span>,</span>
<span id="cb3-16">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F15472"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CHG"</span>,</span>
<span id="cb3-17">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F15004"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CHG_PCT"</span>,</span>
<span id="cb3-18">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F15006"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CHG_TYPE"</span>,</span>
<span id="cb3-19">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F16073"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EX_EVENT"</span>,</span>
<span id="cb3-20">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F30704"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OPEN_NOTADJ"</span>,</span>
<span id="cb3-21">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F30705"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HIGH_NOTADJ"</span>,</span>
<span id="cb3-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F30706"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LOW_NOTADJ"</span>,</span>
<span id="cb3-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F30700"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CLOSE_NOTADJ"</span>,</span>
<span id="cb3-24">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F30701"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CHG_NOTADJ"</span>,</span>
<span id="cb3-25">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F30702"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CHG_PCT_NOTADJ"</span>,</span>
<span id="cb3-26">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F30703"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CHG_TYPE_NOTADJ"</span>,</span>
<span id="cb3-27">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F15028"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MARKETCAP"</span>,</span>
<span id="cb3-28">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F16143"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SHARES"</span>,</span>
<span id="cb3-29">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F15037"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"VWAP"</span>,</span>
<span id="cb3-30">    }</span>
<span id="cb3-31">)</span>
<span id="cb3-32">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">DATE</th>
<th data-quarto-table-cell-role="th">SYMBOL</th>
<th data-quarto-table-cell-role="th">CLOSE</th>
<th data-quarto-table-cell-role="th">OPEN</th>
<th data-quarto-table-cell-role="th">HIGH</th>
<th data-quarto-table-cell-role="th">LOW</th>
<th data-quarto-table-cell-role="th">CHG</th>
<th data-quarto-table-cell-role="th">CHG_TYPE</th>
<th data-quarto-table-cell-role="th">CHG_PCT</th>
<th data-quarto-table-cell-role="th">VOLUME</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">EX_EVENT</th>
<th data-quarto-table-cell-role="th">SHARES</th>
<th data-quarto-table-cell-role="th">CLOSE_NOTADJ</th>
<th data-quarto-table-cell-role="th">CHG_NOTADJ</th>
<th data-quarto-table-cell-role="th">CHG_PCT_NOTADJ</th>
<th data-quarto-table-cell-role="th">CHG_TYPE_NOTADJ</th>
<th data-quarto-table-cell-role="th">OPEN_NOTADJ</th>
<th data-quarto-table-cell-role="th">HIGH_NOTADJ</th>
<th data-quarto-table-cell-role="th">LOW_NOTADJ</th>
<th data-quarto-table-cell-role="th">VWAP</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>20230630</td>
<td>005930</td>
<td>72200</td>
<td>72500</td>
<td>72700</td>
<td>71700</td>
<td>-200</td>
<td>5</td>
<td>-0.28</td>
<td>11694765</td>
<td>...</td>
<td>00</td>
<td>5969782550</td>
<td>72200</td>
<td>-200</td>
<td>-0.28</td>
<td>5</td>
<td>72500</td>
<td>72700</td>
<td>71700</td>
<td>72199</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>20230629</td>
<td>005930</td>
<td>72400</td>
<td>73100</td>
<td>73400</td>
<td>72400</td>
<td>-300</td>
<td>5</td>
<td>-0.41</td>
<td>12229967</td>
<td>...</td>
<td>00</td>
<td>5969782550</td>
<td>72400</td>
<td>-300</td>
<td>-0.41</td>
<td>5</td>
<td>73100</td>
<td>73400</td>
<td>72400</td>
<td>72914</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>20230628</td>
<td>005930</td>
<td>72700</td>
<td>72600</td>
<td>72700</td>
<td>72000</td>
<td>100</td>
<td>2</td>
<td>0.14</td>
<td>8783093</td>
<td>...</td>
<td>00</td>
<td>5969782550</td>
<td>72700</td>
<td>100</td>
<td>0.14</td>
<td>2</td>
<td>72600</td>
<td>72700</td>
<td>72000</td>
<td>72357</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>20230627</td>
<td>005930</td>
<td>72600</td>
<td>72500</td>
<td>72600</td>
<td>72000</td>
<td>200</td>
<td>2</td>
<td>0.28</td>
<td>9442997</td>
<td>...</td>
<td>00</td>
<td>5969782550</td>
<td>72600</td>
<td>200</td>
<td>0.28</td>
<td>2</td>
<td>72500</td>
<td>72600</td>
<td>72000</td>
<td>72395</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>20230626</td>
<td>005930</td>
<td>72400</td>
<td>71700</td>
<td>72500</td>
<td>71500</td>
<td>800</td>
<td>2</td>
<td>1.12</td>
<td>10541901</td>
<td>...</td>
<td>00</td>
<td>5969782550</td>
<td>72400</td>
<td>800</td>
<td>1.12</td>
<td>2</td>
<td>71700</td>
<td>72500</td>
<td>71500</td>
<td>72238</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">118</td>
<td>20230106</td>
<td>005930</td>
<td>59000</td>
<td>58300</td>
<td>59400</td>
<td>57900</td>
<td>800</td>
<td>2</td>
<td>1.37</td>
<td>17334989</td>
<td>...</td>
<td>00</td>
<td>5969782550</td>
<td>59000</td>
<td>800</td>
<td>1.37</td>
<td>2</td>
<td>58300</td>
<td>59400</td>
<td>57900</td>
<td>58770</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">119</td>
<td>20230105</td>
<td>005930</td>
<td>58200</td>
<td>58200</td>
<td>58800</td>
<td>57600</td>
<td>400</td>
<td>2</td>
<td>0.69</td>
<td>15682826</td>
<td>...</td>
<td>00</td>
<td>5969782550</td>
<td>58200</td>
<td>400</td>
<td>0.69</td>
<td>2</td>
<td>58200</td>
<td>58800</td>
<td>57600</td>
<td>58151</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">120</td>
<td>20230104</td>
<td>005930</td>
<td>57800</td>
<td>55700</td>
<td>58000</td>
<td>55600</td>
<td>2400</td>
<td>2</td>
<td>4.33</td>
<td>20188071</td>
<td>...</td>
<td>00</td>
<td>5969782550</td>
<td>57800</td>
<td>2400</td>
<td>4.33</td>
<td>2</td>
<td>55700</td>
<td>58000</td>
<td>55600</td>
<td>57037</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">121</td>
<td>20230103</td>
<td>005930</td>
<td>55400</td>
<td>55400</td>
<td>56000</td>
<td>54500</td>
<td>-100</td>
<td>5</td>
<td>-0.18</td>
<td>13547030</td>
<td>...</td>
<td>00</td>
<td>5969782550</td>
<td>55400</td>
<td>-100</td>
<td>-0.18</td>
<td>5</td>
<td>55400</td>
<td>56000</td>
<td>54500</td>
<td>55208</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">122</td>
<td>20230102</td>
<td>005930</td>
<td>55500</td>
<td>55500</td>
<td>56100</td>
<td>55200</td>
<td>200</td>
<td>2</td>
<td>0.36</td>
<td>10031448</td>
<td>...</td>
<td>00</td>
<td>5969782550</td>
<td>55500</td>
<td>200</td>
<td>0.36</td>
<td>2</td>
<td>55500</td>
<td>56100</td>
<td>55200</td>
<td>55668</td>
</tr>
</tbody>
</table>

<p>123 rows × 22 columns</p>
</div>
</div>
</div>
</div>
<p>하지만 kquant 패키지를 사용할 경우 <code>daily_stock</code> 함수를 실행하는 것 만으로 위와 같은 모든 과정을 처리할 수 있습니다.</p>
<div id="60a34c34" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kquant <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> kq</span>
<span id="cb4-2"></span>
<span id="cb4-3">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kq.daily_stock(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"005930"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20230101"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20230630"</span>)</span>
<span id="cb4-4">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">DATE</th>
<th data-quarto-table-cell-role="th">SYMBOL</th>
<th data-quarto-table-cell-role="th">OPEN</th>
<th data-quarto-table-cell-role="th">HIGH</th>
<th data-quarto-table-cell-role="th">LOW</th>
<th data-quarto-table-cell-role="th">CLOSE</th>
<th data-quarto-table-cell-role="th">VOLUME</th>
<th data-quarto-table-cell-role="th">AMOUNT</th>
<th data-quarto-table-cell-role="th">CHG</th>
<th data-quarto-table-cell-role="th">CHG_PCT</th>
<th data-quarto-table-cell-role="th">CHG_TYPE</th>
<th data-quarto-table-cell-role="th">EX_EVENT</th>
<th data-quarto-table-cell-role="th">OPEN_NOTADJ</th>
<th data-quarto-table-cell-role="th">HIGH_NOTADJ</th>
<th data-quarto-table-cell-role="th">LOW_NOTADJ</th>
<th data-quarto-table-cell-role="th">CLOSE_NOTADJ</th>
<th data-quarto-table-cell-role="th">CHG_NOTADJ</th>
<th data-quarto-table-cell-role="th">CHG_PCT_NOTADJ</th>
<th data-quarto-table-cell-role="th">CHG_TYPE_NOTADJ</th>
<th data-quarto-table-cell-role="th">MARKETCAP</th>
<th data-quarto-table-cell-role="th">SHARES</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>2023-01-02</td>
<td>005930</td>
<td>55,500</td>
<td>56,100</td>
<td>55,200</td>
<td>55,500</td>
<td>10,031,448</td>
<td>558,433,491,400</td>
<td>200</td>
<td>0.3600</td>
<td>2</td>
<td>00</td>
<td>55,500</td>
<td>56,100</td>
<td>55,200</td>
<td>55,500</td>
<td>200</td>
<td>0.3600</td>
<td>2</td>
<td>331,322,931,525,000</td>
<td>5,969,782,550</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2023-01-03</td>
<td>005930</td>
<td>55,400</td>
<td>56,000</td>
<td>54,500</td>
<td>55,400</td>
<td>13,547,030</td>
<td>747,898,872,200</td>
<td>-100</td>
<td>-0.1800</td>
<td>5</td>
<td>00</td>
<td>55,400</td>
<td>56,000</td>
<td>54,500</td>
<td>55,400</td>
<td>-100</td>
<td>-0.1800</td>
<td>5</td>
<td>330,725,953,270,000</td>
<td>5,969,782,550</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>2023-01-04</td>
<td>005930</td>
<td>55,700</td>
<td>58,000</td>
<td>55,600</td>
<td>57,800</td>
<td>20,188,071</td>
<td>1,151,473,733,800</td>
<td>2,400</td>
<td>4.3300</td>
<td>2</td>
<td>00</td>
<td>55,700</td>
<td>58,000</td>
<td>55,600</td>
<td>57,800</td>
<td>2,400</td>
<td>4.3300</td>
<td>2</td>
<td>345,053,431,390,000</td>
<td>5,969,782,550</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>2023-01-05</td>
<td>005930</td>
<td>58,200</td>
<td>58,800</td>
<td>57,600</td>
<td>58,200</td>
<td>15,682,826</td>
<td>911,973,904,900</td>
<td>400</td>
<td>0.6900</td>
<td>2</td>
<td>00</td>
<td>58,200</td>
<td>58,800</td>
<td>57,600</td>
<td>58,200</td>
<td>400</td>
<td>0.6900</td>
<td>2</td>
<td>347,441,344,410,000</td>
<td>5,969,782,550</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>2023-01-06</td>
<td>005930</td>
<td>58,300</td>
<td>59,400</td>
<td>57,900</td>
<td>59,000</td>
<td>17,334,989</td>
<td>1,018,769,177,900</td>
<td>800</td>
<td>1.3700</td>
<td>2</td>
<td>00</td>
<td>58,300</td>
<td>59,400</td>
<td>57,900</td>
<td>59,000</td>
<td>800</td>
<td>1.3700</td>
<td>2</td>
<td>352,217,170,450,000</td>
<td>5,969,782,550</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">118</td>
<td>2023-06-26</td>
<td>005930</td>
<td>71,700</td>
<td>72,500</td>
<td>71,500</td>
<td>72,400</td>
<td>10,541,901</td>
<td>761,525,382,100</td>
<td>800</td>
<td>1.1200</td>
<td>2</td>
<td>00</td>
<td>71,700</td>
<td>72,500</td>
<td>71,500</td>
<td>72,400</td>
<td>800</td>
<td>1.1200</td>
<td>2</td>
<td>432,212,256,620,000</td>
<td>5,969,782,550</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">119</td>
<td>2023-06-27</td>
<td>005930</td>
<td>72,500</td>
<td>72,600</td>
<td>72,000</td>
<td>72,600</td>
<td>9,442,997</td>
<td>683,624,715,982</td>
<td>200</td>
<td>0.2800</td>
<td>2</td>
<td>00</td>
<td>72,500</td>
<td>72,600</td>
<td>72,000</td>
<td>72,600</td>
<td>200</td>
<td>0.2800</td>
<td>2</td>
<td>433,406,213,130,000</td>
<td>5,969,782,550</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">120</td>
<td>2023-06-28</td>
<td>005930</td>
<td>72,600</td>
<td>72,700</td>
<td>72,000</td>
<td>72,700</td>
<td>8,783,093</td>
<td>635,516,679,700</td>
<td>100</td>
<td>0.1400</td>
<td>2</td>
<td>00</td>
<td>72,600</td>
<td>72,700</td>
<td>72,000</td>
<td>72,700</td>
<td>100</td>
<td>0.1400</td>
<td>2</td>
<td>434,003,191,385,000</td>
<td>5,969,782,550</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">121</td>
<td>2023-06-29</td>
<td>005930</td>
<td>73,100</td>
<td>73,400</td>
<td>72,400</td>
<td>72,400</td>
<td>12,229,967</td>
<td>891,731,369,446</td>
<td>-300</td>
<td>-0.4100</td>
<td>5</td>
<td>00</td>
<td>73,100</td>
<td>73,400</td>
<td>72,400</td>
<td>72,400</td>
<td>-300</td>
<td>-0.4100</td>
<td>5</td>
<td>432,212,256,620,000</td>
<td>5,969,782,550</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">122</td>
<td>2023-06-30</td>
<td>005930</td>
<td>72,500</td>
<td>72,700</td>
<td>71,700</td>
<td>72,200</td>
<td>11,694,765</td>
<td>844,353,820,176</td>
<td>-200</td>
<td>-0.2800</td>
<td>5</td>
<td>00</td>
<td>72,500</td>
<td>72,700</td>
<td>71,700</td>
<td>72,200</td>
<td>-200</td>
<td>-0.2800</td>
<td>5</td>
<td>431,018,300,110,000</td>
<td>5,969,782,550</td>
</tr>
</tbody>
</table>

<p>123 rows × 21 columns</p>
</div>
</div>
</div>
</div>
</section>
<section id="금융-데이터-시각화" class="level3">
<h3 class="anchored" data-anchor-id="금융-데이터-시각화">2. 금융 데이터 시각화</h3>
<p>금융 데이터에 대한 인터랙티브 시각화 기능을 제공합니다.</p>
<p>예를 들어 kquant 패키지의 <code>chart_candle</code> 함수를 사용하면 위 코드로 받은 삼성전자의 시세 데이터를 일봉차트로 표시할 수 있습니다.</p>
<div id="2bd012b4" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1">kq.chart_candle(df)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>                            <div id="633c0786-9d90-4698-83d1-050a464f8863" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("633c0786-9d90-4698-83d1-050a464f8863")) {                    Plotly.newPlot(                        "633c0786-9d90-4698-83d1-050a464f8863",                        [{"close":[55500,55400,57800,58200,59000,60700,60400,60500,60500,60800,61100,61000,60400,61500,61800,63400,63900,64600,63300,61000,61800,63500,63800,61600,61900,63100,63000,62800,62900,63200,62200,63700,62600,62700,62100,61100,62000,61300,60500,60600,60800,60500,61500,60700,60300,60100,59500,60000,59000,59800,59900,61300,60200,60300,61100,62300,63000,62100,62900,62700,63200,64000,63100,63600,63900,62300,65000,65700,65900,66000,66100,65100,65300,65600,65500,65300,65700,65200,63600,64100,64600,65500,65700,65400,65100,65900,65300,64600,64200,64100,64500,65400,65000,66200,68400,68500,68400,68500,68800,70300,72300,71400,70900,72200,71700,71000,70900,72000,71000,72000,71900,71500,71800,71200,71400,70500,71300,71600,72400,72600,72700,72400,72200],"decreasing":{"fillcolor":"#00008B","line":{"color":"#00008B"}},"high":[56100,56000,58000,58800,59400,60700,61100,61200,61200,61200,61600,61500,61000,61500,62300,63700,63900,65000,64900,63700,62700,63900,64000,63000,62500,63300,63300,63000,63000,63900,63900,63700,63300,63000,62800,61800,62500,62600,60800,61400,61800,61200,61600,61400,60500,60800,59700,60200,59500,60300,60200,61300,61200,60700,61200,62300,63300,62800,62900,62700,63700,64000,64000,63800,64000,63600,65200,66300,66200,66200,66100,66600,65600,66000,65800,65300,65900,65700,65400,64300,65000,65900,66300,65600,65700,66300,65800,65500,65100,64600,64600,65900,65900,66200,68400,69000,68700,68700,70000,70400,72300,72500,71600,72200,72700,71600,70900,72300,72400,72200,72200,72300,71900,71700,71400,71200,71500,72200,72500,72600,72700,73400,72700],"increasing":{"fillcolor":"#DC143C","line":{"color":"#DC143C"}},"line":{"width":1},"low":[55200,54500,55600,57600,57900,59600,59900,60300,59900,60400,60800,60600,59900,60400,61100,63000,63300,63900,63100,61000,61000,62600,63000,61600,61600,62400,62300,62400,62300,63200,62000,62400,62400,61800,62000,61000,61500,61300,60200,60500,60500,60500,60800,60700,59900,59900,59100,59300,59000,59600,59100,60600,60200,60100,60500,60600,62300,62000,62100,62200,63100,63700,63000,62800,63400,62300,63800,64700,65400,65300,65400,65000,64700,64800,65300,64600,65400,64800,63400,63300,63300,65000,65100,64900,64700,65400,65100,64300,64200,63600,63900,65300,64800,65700,67500,68000,68100,68000,68700,69500,71200,71000,70600,71600,71400,70800,70000,70800,70800,71600,71100,71300,70900,70900,70400,70400,70100,71600,71500,72000,72000,72400,71700],"name":"","open":[55500,55400,55700,58200,58300,59700,60200,61000,61100,60500,61300,61200,60700,60500,62100,63500,63800,64400,64900,63500,62600,63200,63900,62800,61900,62800,63000,62600,62900,63600,63900,62500,62900,62900,62700,61500,61700,62300,60800,60800,60900,61000,61100,61400,60100,60500,59500,59900,59400,60000,59200,60800,61100,60500,61000,60600,62700,62600,62400,62500,63700,64000,64000,63400,63700,63500,63800,64800,66200,65800,65600,66600,65000,65900,65500,65100,65800,65300,65300,63600,64100,65200,66000,65100,65600,66300,65800,65500,64700,63700,64100,65800,65900,66000,67800,68400,68500,68100,69900,69800,71300,72400,70900,71700,72700,71300,70400,71100,72100,71700,72100,72100,71800,71300,70700,70700,70200,72000,71700,72500,72600,73100,72500],"x":["2023-01-02T00:00:00","2023-01-03T00:00:00","2023-01-04T00:00:00","2023-01-05T00:00:00","2023-01-06T00:00:00","2023-01-09T00:00:00","2023-01-10T00:00:00","2023-01-11T00:00:00","2023-01-12T00:00:00","2023-01-13T00:00:00","2023-01-16T00:00:00","2023-01-17T00:00:00","2023-01-18T00:00:00","2023-01-19T00:00:00","2023-01-20T00:00:00","2023-01-25T00:00:00","2023-01-26T00:00:00","2023-01-27T00:00:00","2023-01-30T00:00:00","2023-01-31T00:00:00","2023-02-01T00:00:00","2023-02-02T00:00:00","2023-02-03T00:00:00","2023-02-06T00:00:00","2023-02-07T00:00:00","2023-02-08T00:00:00","2023-02-09T00:00:00","2023-02-10T00:00:00","2023-02-13T00:00:00","2023-02-14T00:00:00","2023-02-15T00:00:00","2023-02-16T00:00:00","2023-02-17T00:00:00","2023-02-20T00:00:00","2023-02-21T00:00:00","2023-02-22T00:00:00","2023-02-23T00:00:00","2023-02-24T00:00:00","2023-02-27T00:00:00","2023-02-28T00:00:00","2023-03-02T00:00:00","2023-03-03T00:00:00","2023-03-06T00:00:00","2023-03-07T00:00:00","2023-03-08T00:00:00","2023-03-09T00:00:00","2023-03-10T00:00:00","2023-03-13T00:00:00","2023-03-14T00:00:00","2023-03-15T00:00:00","2023-03-16T00:00:00","2023-03-17T00:00:00","2023-03-20T00:00:00","2023-03-21T00:00:00","2023-03-22T00:00:00","2023-03-23T00:00:00","2023-03-24T00:00:00","2023-03-27T00:00:00","2023-03-28T00:00:00","2023-03-29T00:00:00","2023-03-30T00:00:00","2023-03-31T00:00:00","2023-04-03T00:00:00","2023-04-04T00:00:00","2023-04-05T00:00:00","2023-04-06T00:00:00","2023-04-07T00:00:00","2023-04-10T00:00:00","2023-04-11T00:00:00","2023-04-12T00:00:00","2023-04-13T00:00:00","2023-04-14T00:00:00","2023-04-17T00:00:00","2023-04-18T00:00:00","2023-04-19T00:00:00","2023-04-20T00:00:00","2023-04-21T00:00:00","2023-04-24T00:00:00","2023-04-25T00:00:00","2023-04-26T00:00:00","2023-04-27T00:00:00","2023-04-28T00:00:00","2023-05-02T00:00:00","2023-05-03T00:00:00","2023-05-04T00:00:00","2023-05-08T00:00:00","2023-05-09T00:00:00","2023-05-10T00:00:00","2023-05-11T00:00:00","2023-05-12T00:00:00","2023-05-15T00:00:00","2023-05-16T00:00:00","2023-05-17T00:00:00","2023-05-18T00:00:00","2023-05-19T00:00:00","2023-05-22T00:00:00","2023-05-23T00:00:00","2023-05-24T00:00:00","2023-05-25T00:00:00","2023-05-26T00:00:00","2023-05-30T00:00:00","2023-05-31T00:00:00","2023-06-01T00:00:00","2023-06-02T00:00:00","2023-06-05T00:00:00","2023-06-07T00:00:00","2023-06-08T00:00:00","2023-06-09T00:00:00","2023-06-12T00:00:00","2023-06-13T00:00:00","2023-06-14T00:00:00","2023-06-15T00:00:00","2023-06-16T00:00:00","2023-06-19T00:00:00","2023-06-20T00:00:00","2023-06-21T00:00:00","2023-06-22T00:00:00","2023-06-23T00:00:00","2023-06-26T00:00:00","2023-06-27T00:00:00","2023-06-28T00:00:00","2023-06-29T00:00:00","2023-06-30T00:00:00"],"xhoverformat":"%Y-%m-%d","yhoverformat":",","type":"candlestick","xaxis":"x","yaxis":"y"},{"marker":{"color":"#000000"},"name":"\uac70\ub798\ub7c9","x":["2023-01-02T00:00:00","2023-01-03T00:00:00","2023-01-04T00:00:00","2023-01-05T00:00:00","2023-01-06T00:00:00","2023-01-09T00:00:00","2023-01-10T00:00:00","2023-01-11T00:00:00","2023-01-12T00:00:00","2023-01-13T00:00:00","2023-01-16T00:00:00","2023-01-17T00:00:00","2023-01-18T00:00:00","2023-01-19T00:00:00","2023-01-20T00:00:00","2023-01-25T00:00:00","2023-01-26T00:00:00","2023-01-27T00:00:00","2023-01-30T00:00:00","2023-01-31T00:00:00","2023-02-01T00:00:00","2023-02-02T00:00:00","2023-02-03T00:00:00","2023-02-06T00:00:00","2023-02-07T00:00:00","2023-02-08T00:00:00","2023-02-09T00:00:00","2023-02-10T00:00:00","2023-02-13T00:00:00","2023-02-14T00:00:00","2023-02-15T00:00:00","2023-02-16T00:00:00","2023-02-17T00:00:00","2023-02-20T00:00:00","2023-02-21T00:00:00","2023-02-22T00:00:00","2023-02-23T00:00:00","2023-02-24T00:00:00","2023-02-27T00:00:00","2023-02-28T00:00:00","2023-03-02T00:00:00","2023-03-03T00:00:00","2023-03-06T00:00:00","2023-03-07T00:00:00","2023-03-08T00:00:00","2023-03-09T00:00:00","2023-03-10T00:00:00","2023-03-13T00:00:00","2023-03-14T00:00:00","2023-03-15T00:00:00","2023-03-16T00:00:00","2023-03-17T00:00:00","2023-03-20T00:00:00","2023-03-21T00:00:00","2023-03-22T00:00:00","2023-03-23T00:00:00","2023-03-24T00:00:00","2023-03-27T00:00:00","2023-03-28T00:00:00","2023-03-29T00:00:00","2023-03-30T00:00:00","2023-03-31T00:00:00","2023-04-03T00:00:00","2023-04-04T00:00:00","2023-04-05T00:00:00","2023-04-06T00:00:00","2023-04-07T00:00:00","2023-04-10T00:00:00","2023-04-11T00:00:00","2023-04-12T00:00:00","2023-04-13T00:00:00","2023-04-14T00:00:00","2023-04-17T00:00:00","2023-04-18T00:00:00","2023-04-19T00:00:00","2023-04-20T00:00:00","2023-04-21T00:00:00","2023-04-24T00:00:00","2023-04-25T00:00:00","2023-04-26T00:00:00","2023-04-27T00:00:00","2023-04-28T00:00:00","2023-05-02T00:00:00","2023-05-03T00:00:00","2023-05-04T00:00:00","2023-05-08T00:00:00","2023-05-09T00:00:00","2023-05-10T00:00:00","2023-05-11T00:00:00","2023-05-12T00:00:00","2023-05-15T00:00:00","2023-05-16T00:00:00","2023-05-17T00:00:00","2023-05-18T00:00:00","2023-05-19T00:00:00","2023-05-22T00:00:00","2023-05-23T00:00:00","2023-05-24T00:00:00","2023-05-25T00:00:00","2023-05-26T00:00:00","2023-05-30T00:00:00","2023-05-31T00:00:00","2023-06-01T00:00:00","2023-06-02T00:00:00","2023-06-05T00:00:00","2023-06-07T00:00:00","2023-06-08T00:00:00","2023-06-09T00:00:00","2023-06-12T00:00:00","2023-06-13T00:00:00","2023-06-14T00:00:00","2023-06-15T00:00:00","2023-06-16T00:00:00","2023-06-19T00:00:00","2023-06-20T00:00:00","2023-06-21T00:00:00","2023-06-22T00:00:00","2023-06-23T00:00:00","2023-06-26T00:00:00","2023-06-27T00:00:00","2023-06-28T00:00:00","2023-06-29T00:00:00","2023-06-30T00:00:00"],"y":[10031448,13547030,20188071,15682826,17334989,18640107,14859797,12310751,16102561,12510328,10039972,9831456,11584041,12808490,9646327,16822710,13278277,18760182,20995234,29746731,18570133,23285983,15194598,15529356,14491039,12243125,12164865,9382576,10730362,9126664,13208103,13798831,10791265,12908073,7665046,11959088,13047099,10308143,11155697,13715861,13095682,10711405,13630602,11473280,14161857,14334499,11902471,12779724,12147346,10482149,10611939,14090110,9618009,8318514,8978591,15381057,18278602,11039331,11614118,11216008,15684377,14094479,11973133,11120514,9176149,14992747,27476120,18777166,16323183,15021313,15091022,16176490,13486618,14802060,10255985,9501169,10538622,12986581,16193271,12664541,14779601,19699481,14396948,8876749,9791064,9405365,9366861,13057727,11648905,8693913,8172021,12334657,10745504,14431704,20349345,14470308,8561643,8192896,14231160,19549511,27476897,25666087,14669296,12161798,12686829,14796613,19165568,15050209,12064287,13227285,12541046,13614994,15373696,11100887,11557883,10626603,11411007,12329484,10541901,9442997,8783093,12229967,11694765],"type":"bar","xaxis":"x2","yaxis":"y2"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"},"margin":{"b":0,"l":0,"r":0,"t":30}}},"xaxis":{"anchor":"y","domain":[0.0,1.0],"matches":"x2","showticklabels":false,"tickformat":"%Y-%m-%d","rangeslider":{"visible":false},"rangebreaks":[{"values":["2023-01-07T00:00:00","2023-01-08T00:00:00","2023-01-14T00:00:00","2023-01-15T00:00:00","2023-01-21T00:00:00","2023-01-22T00:00:00","2023-01-23T00:00:00","2023-01-24T00:00:00","2023-01-28T00:00:00","2023-01-29T00:00:00","2023-02-04T00:00:00","2023-02-05T00:00:00","2023-02-11T00:00:00","2023-02-12T00:00:00","2023-02-18T00:00:00","2023-02-19T00:00:00","2023-02-25T00:00:00","2023-02-26T00:00:00","2023-03-01T00:00:00","2023-03-04T00:00:00","2023-03-05T00:00:00","2023-03-11T00:00:00","2023-03-12T00:00:00","2023-03-18T00:00:00","2023-03-19T00:00:00","2023-03-25T00:00:00","2023-03-26T00:00:00","2023-04-01T00:00:00","2023-04-02T00:00:00","2023-04-08T00:00:00","2023-04-09T00:00:00","2023-04-15T00:00:00","2023-04-16T00:00:00","2023-04-22T00:00:00","2023-04-23T00:00:00","2023-04-29T00:00:00","2023-04-30T00:00:00","2023-05-01T00:00:00","2023-05-05T00:00:00","2023-05-06T00:00:00","2023-05-07T00:00:00","2023-05-13T00:00:00","2023-05-14T00:00:00","2023-05-20T00:00:00","2023-05-21T00:00:00","2023-05-27T00:00:00","2023-05-28T00:00:00","2023-05-29T00:00:00","2023-06-03T00:00:00","2023-06-04T00:00:00","2023-06-06T00:00:00","2023-06-10T00:00:00","2023-06-11T00:00:00","2023-06-17T00:00:00","2023-06-18T00:00:00","2023-06-24T00:00:00","2023-06-25T00:00:00"]}],"hoverformat":"%Y-%m-%d"},"yaxis":{"anchor":"x","domain":[0.23421052631578948,1.0],"tickformat":","},"xaxis2":{"anchor":"y2","domain":[0.0,1.0],"rangeslider":{"visible":false},"rangebreaks":[{"values":["2023-01-07T00:00:00","2023-01-08T00:00:00","2023-01-14T00:00:00","2023-01-15T00:00:00","2023-01-21T00:00:00","2023-01-22T00:00:00","2023-01-23T00:00:00","2023-01-24T00:00:00","2023-01-28T00:00:00","2023-01-29T00:00:00","2023-02-04T00:00:00","2023-02-05T00:00:00","2023-02-11T00:00:00","2023-02-12T00:00:00","2023-02-18T00:00:00","2023-02-19T00:00:00","2023-02-25T00:00:00","2023-02-26T00:00:00","2023-03-01T00:00:00","2023-03-04T00:00:00","2023-03-05T00:00:00","2023-03-11T00:00:00","2023-03-12T00:00:00","2023-03-18T00:00:00","2023-03-19T00:00:00","2023-03-25T00:00:00","2023-03-26T00:00:00","2023-04-01T00:00:00","2023-04-02T00:00:00","2023-04-08T00:00:00","2023-04-09T00:00:00","2023-04-15T00:00:00","2023-04-16T00:00:00","2023-04-22T00:00:00","2023-04-23T00:00:00","2023-04-29T00:00:00","2023-04-30T00:00:00","2023-05-01T00:00:00","2023-05-05T00:00:00","2023-05-06T00:00:00","2023-05-07T00:00:00","2023-05-13T00:00:00","2023-05-14T00:00:00","2023-05-20T00:00:00","2023-05-21T00:00:00","2023-05-27T00:00:00","2023-05-28T00:00:00","2023-05-29T00:00:00","2023-06-03T00:00:00","2023-06-04T00:00:00","2023-06-06T00:00:00","2023-06-10T00:00:00","2023-06-11T00:00:00","2023-06-17T00:00:00","2023-06-18T00:00:00","2023-06-24T00:00:00","2023-06-25T00:00:00"]}],"tickformat":"%Y-%m-%d","hoverformat":"%Y-%m-%d"},"yaxis2":{"anchor":"x2","domain":[0.0,0.20421052631578948],"tickformat":","},"margin":{"b":15,"l":25,"r":25,"t":50},"title":{"text":"\uce94\ub4e4\ucc60\ud2b8 (2023-01-02 ~ 2023-06-30)","x":0.5,"y":0.95},"hovermode":"x unified","showlegend":false},                        {"modeBarButtonsToRemove": ["resetScale2d", "lasso2d", "zoomIn2d", "zoomOut2d", "select2d"], "displaylogo": false, "responsive": true}                    ).then(function(){
                            
var gd = document.getElementById('633c0786-9d90-4698-83d1-050a464f8863');
var x = new MutationObserver(function (mutations, observer) {{
        var display = window.getComputedStyle(gd).display;
        if (!display || display === 'none') {{
            console.log([gd, 'removed!']);
            Plotly.purge(gd);
            observer.disconnect();
        }}
}});

// Listen for the removal of the full notebook cells
var notebookContainer = gd.closest('#notebook-container');
if (notebookContainer) {{
    x.observe(notebookContainer, {childList: true});
}}

// Listen for the clearing of the current output cell
var outputEl = gd.closest('.output');
if (outputEl) {{
    x.observe(outputEl, {childList: true});
}}

                        })                };                });            </script>        </div>
</div>
</div>
</section>
<section id="금융-데이터-분석-기능-제공" class="level3">
<h3 class="anchored" data-anchor-id="금융-데이터-분석-기능-제공">3. 금융 데이터 분석 기능 제공</h3>
<p>주식 백테스트를 포함한 다양한 금융분석 기능을 제공합니다.</p>
<p>예를 들어 다음과 같은 방법으로 5일-10일 이동평균 교차 전략을 사용한 모의 거래의 결과를 얻을 수 있습니다.</p>
<div id="97bbf71b" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> logging</span>
<span id="cb6-2"></span>
<span id="cb6-3">kq.sma(df, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, out_column<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FAST"</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 5일 이동평균</span></span>
<span id="cb6-4">kq.sma(df, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, out_column<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SLOW"</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 10일 이동평균</span></span>
<span id="cb6-5">kq.cross(df, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FAST"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SLOW"</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이동평균 교차</span></span>
<span id="cb6-6"></span>
<span id="cb6-7">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kq.add_order_from_signals(df, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CROSS_UP"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CROSS_DOWN"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이동평균 교차 매매</span></span>
<span id="cb6-8"></span>
<span id="cb6-9">df_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kq.backtest_stock_daily(</span>
<span id="cb6-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"005930"</span>,</span>
<span id="cb6-11">    df,</span>
<span id="cb6-12">    init_cash<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100_000</span>,</span>
<span id="cb6-13">    broker_fee_percent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-14">    exchange_fee_percent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-15">    loglevel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>logging.CRITICAL,</span>
<span id="cb6-16">)</span>
<span id="cb6-17"></span>
<span id="cb6-18">kq.backtest_plot_stock_daily(df_result)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>                            <div id="5c09f435-b2fe-4ee4-96d8-fd6bdcadc45f" class="plotly-graph-div" style="height:800px; width:100%;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("5c09f435-b2fe-4ee4-96d8-fd6bdcadc45f")) {                    Plotly.newPlot(                        "5c09f435-b2fe-4ee4-96d8-fd6bdcadc45f",                        [{"marker":{"color":"#000000"},"mode":"lines","name":"\uac00\uaca9","x":["2023-01-02T00:00:00","2023-01-03T00:00:00","2023-01-04T00:00:00","2023-01-05T00:00:00","2023-01-06T00:00:00","2023-01-09T00:00:00","2023-01-10T00:00:00","2023-01-11T00:00:00","2023-01-12T00:00:00","2023-01-13T00:00:00","2023-01-16T00:00:00","2023-01-17T00:00:00","2023-01-18T00:00:00","2023-01-19T00:00:00","2023-01-20T00:00:00","2023-01-25T00:00:00","2023-01-26T00:00:00","2023-01-27T00:00:00","2023-01-30T00:00:00","2023-01-31T00:00:00","2023-02-01T00:00:00","2023-02-02T00:00:00","2023-02-03T00:00:00","2023-02-06T00:00:00","2023-02-07T00:00:00","2023-02-08T00:00:00","2023-02-09T00:00:00","2023-02-10T00:00:00","2023-02-13T00:00:00","2023-02-14T00:00:00","2023-02-15T00:00:00","2023-02-16T00:00:00","2023-02-17T00:00:00","2023-02-20T00:00:00","2023-02-21T00:00:00","2023-02-22T00:00:00","2023-02-23T00:00:00","2023-02-24T00:00:00","2023-02-27T00:00:00","2023-02-28T00:00:00","2023-03-02T00:00:00","2023-03-03T00:00:00","2023-03-06T00:00:00","2023-03-07T00:00:00","2023-03-08T00:00:00","2023-03-09T00:00:00","2023-03-10T00:00:00","2023-03-13T00:00:00","2023-03-14T00:00:00","2023-03-15T00:00:00","2023-03-16T00:00:00","2023-03-17T00:00:00","2023-03-20T00:00:00","2023-03-21T00:00:00","2023-03-22T00:00:00","2023-03-23T00:00:00","2023-03-24T00:00:00","2023-03-27T00:00:00","2023-03-28T00:00:00","2023-03-29T00:00:00","2023-03-30T00:00:00","2023-03-31T00:00:00","2023-04-03T00:00:00","2023-04-04T00:00:00","2023-04-05T00:00:00","2023-04-06T00:00:00","2023-04-07T00:00:00","2023-04-10T00:00:00","2023-04-11T00:00:00","2023-04-12T00:00:00","2023-04-13T00:00:00","2023-04-14T00:00:00","2023-04-17T00:00:00","2023-04-18T00:00:00","2023-04-19T00:00:00","2023-04-20T00:00:00","2023-04-21T00:00:00","2023-04-24T00:00:00","2023-04-25T00:00:00","2023-04-26T00:00:00","2023-04-27T00:00:00","2023-04-28T00:00:00","2023-05-02T00:00:00","2023-05-03T00:00:00","2023-05-04T00:00:00","2023-05-08T00:00:00","2023-05-09T00:00:00","2023-05-10T00:00:00","2023-05-11T00:00:00","2023-05-12T00:00:00","2023-05-15T00:00:00","2023-05-16T00:00:00","2023-05-17T00:00:00","2023-05-18T00:00:00","2023-05-19T00:00:00","2023-05-22T00:00:00","2023-05-23T00:00:00","2023-05-24T00:00:00","2023-05-25T00:00:00","2023-05-26T00:00:00","2023-05-30T00:00:00","2023-05-31T00:00:00","2023-06-01T00:00:00","2023-06-02T00:00:00","2023-06-05T00:00:00","2023-06-07T00:00:00","2023-06-08T00:00:00","2023-06-09T00:00:00","2023-06-12T00:00:00","2023-06-13T00:00:00","2023-06-14T00:00:00","2023-06-15T00:00:00","2023-06-16T00:00:00","2023-06-19T00:00:00","2023-06-20T00:00:00","2023-06-21T00:00:00","2023-06-22T00:00:00","2023-06-23T00:00:00","2023-06-26T00:00:00","2023-06-27T00:00:00","2023-06-28T00:00:00","2023-06-29T00:00:00","2023-06-30T00:00:00"],"y":[55500,55400,57800,58200,59000,60700,60400,60500,60500,60800,61100,61000,60400,61500,61800,63400,63900,64600,63300,61000,61800,63500,63800,61600,61900,63100,63000,62800,62900,63200,62200,63700,62600,62700,62100,61100,62000,61300,60500,60600,60800,60500,61500,60700,60300,60100,59500,60000,59000,59800,59900,61300,60200,60300,61100,62300,63000,62100,62900,62700,63200,64000,63100,63600,63900,62300,65000,65700,65900,66000,66100,65100,65300,65600,65500,65300,65700,65200,63600,64100,64600,65500,65700,65400,65100,65900,65300,64600,64200,64100,64500,65400,65000,66200,68400,68500,68400,68500,68800,70300,72300,71400,70900,72200,71700,71000,70900,72000,71000,72000,71900,71500,71800,71200,71400,70500,71300,71600,72400,72600,72700,72400,72200],"type":"scatter","xaxis":"x5","yaxis":"y"},{"marker":{"color":"#DC143C","line":{"color":"white","width":1},"size":12,"symbol":"triangle-up"},"mode":"markers","name":"\ub9e4\uc218","x":["2023-02-13T00:00:00","2023-03-21T00:00:00","2023-05-04T00:00:00","2023-05-18T00:00:00","2023-06-14T00:00:00","2023-06-27T00:00:00"],"y":[62900,60300,65100,66200,71900,72600],"type":"scatter","xaxis":"x5","yaxis":"y"},{"marker":{"color":"#00008B","line":{"color":"white","width":1},"size":12,"symbol":"triangle-down"},"mode":"markers","name":"\ub9e4\ub3c4","x":["2023-02-21T00:00:00","2023-04-20T00:00:00","2023-05-11T00:00:00","2023-06-12T00:00:00","2023-06-21T00:00:00"],"y":[62100,65300,64200,71000,70500],"type":"scatter","xaxis":"x5","yaxis":"y"},{"fill":"tozeroy","fillcolor":"lightgray","line":{"color":"#000000","shape":"hv"},"mode":"lines","name":"\uc794\uace0\uc218\ub7c9","x":["2023-01-02T00:00:00","2023-01-03T00:00:00","2023-01-04T00:00:00","2023-01-05T00:00:00","2023-01-06T00:00:00","2023-01-09T00:00:00","2023-01-10T00:00:00","2023-01-11T00:00:00","2023-01-12T00:00:00","2023-01-13T00:00:00","2023-01-16T00:00:00","2023-01-17T00:00:00","2023-01-18T00:00:00","2023-01-19T00:00:00","2023-01-20T00:00:00","2023-01-25T00:00:00","2023-01-26T00:00:00","2023-01-27T00:00:00","2023-01-30T00:00:00","2023-01-31T00:00:00","2023-02-01T00:00:00","2023-02-02T00:00:00","2023-02-03T00:00:00","2023-02-06T00:00:00","2023-02-07T00:00:00","2023-02-08T00:00:00","2023-02-09T00:00:00","2023-02-10T00:00:00","2023-02-13T00:00:00","2023-02-14T00:00:00","2023-02-15T00:00:00","2023-02-16T00:00:00","2023-02-17T00:00:00","2023-02-20T00:00:00","2023-02-21T00:00:00","2023-02-22T00:00:00","2023-02-23T00:00:00","2023-02-24T00:00:00","2023-02-27T00:00:00","2023-02-28T00:00:00","2023-03-02T00:00:00","2023-03-03T00:00:00","2023-03-06T00:00:00","2023-03-07T00:00:00","2023-03-08T00:00:00","2023-03-09T00:00:00","2023-03-10T00:00:00","2023-03-13T00:00:00","2023-03-14T00:00:00","2023-03-15T00:00:00","2023-03-16T00:00:00","2023-03-17T00:00:00","2023-03-20T00:00:00","2023-03-21T00:00:00","2023-03-22T00:00:00","2023-03-23T00:00:00","2023-03-24T00:00:00","2023-03-27T00:00:00","2023-03-28T00:00:00","2023-03-29T00:00:00","2023-03-30T00:00:00","2023-03-31T00:00:00","2023-04-03T00:00:00","2023-04-04T00:00:00","2023-04-05T00:00:00","2023-04-06T00:00:00","2023-04-07T00:00:00","2023-04-10T00:00:00","2023-04-11T00:00:00","2023-04-12T00:00:00","2023-04-13T00:00:00","2023-04-14T00:00:00","2023-04-17T00:00:00","2023-04-18T00:00:00","2023-04-19T00:00:00","2023-04-20T00:00:00","2023-04-21T00:00:00","2023-04-24T00:00:00","2023-04-25T00:00:00","2023-04-26T00:00:00","2023-04-27T00:00:00","2023-04-28T00:00:00","2023-05-02T00:00:00","2023-05-03T00:00:00","2023-05-04T00:00:00","2023-05-08T00:00:00","2023-05-09T00:00:00","2023-05-10T00:00:00","2023-05-11T00:00:00","2023-05-12T00:00:00","2023-05-15T00:00:00","2023-05-16T00:00:00","2023-05-17T00:00:00","2023-05-18T00:00:00","2023-05-19T00:00:00","2023-05-22T00:00:00","2023-05-23T00:00:00","2023-05-24T00:00:00","2023-05-25T00:00:00","2023-05-26T00:00:00","2023-05-30T00:00:00","2023-05-31T00:00:00","2023-06-01T00:00:00","2023-06-02T00:00:00","2023-06-05T00:00:00","2023-06-07T00:00:00","2023-06-08T00:00:00","2023-06-09T00:00:00","2023-06-12T00:00:00","2023-06-13T00:00:00","2023-06-14T00:00:00","2023-06-15T00:00:00","2023-06-16T00:00:00","2023-06-19T00:00:00","2023-06-20T00:00:00","2023-06-21T00:00:00","2023-06-22T00:00:00","2023-06-23T00:00:00","2023-06-26T00:00:00","2023-06-27T00:00:00","2023-06-28T00:00:00","2023-06-29T00:00:00","2023-06-30T00:00:00"],"y":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0,0,0,1,1,1,1],"type":"scatter","xaxis":"x5","yaxis":"y2"},{"line":{"color":"#000000","shape":"hv"},"mode":"lines","name":"\uc794\uace0\uac00\uce58","x":["2023-01-02T00:00:00","2023-01-03T00:00:00","2023-01-04T00:00:00","2023-01-05T00:00:00","2023-01-06T00:00:00","2023-01-09T00:00:00","2023-01-10T00:00:00","2023-01-11T00:00:00","2023-01-12T00:00:00","2023-01-13T00:00:00","2023-01-16T00:00:00","2023-01-17T00:00:00","2023-01-18T00:00:00","2023-01-19T00:00:00","2023-01-20T00:00:00","2023-01-25T00:00:00","2023-01-26T00:00:00","2023-01-27T00:00:00","2023-01-30T00:00:00","2023-01-31T00:00:00","2023-02-01T00:00:00","2023-02-02T00:00:00","2023-02-03T00:00:00","2023-02-06T00:00:00","2023-02-07T00:00:00","2023-02-08T00:00:00","2023-02-09T00:00:00","2023-02-10T00:00:00","2023-02-13T00:00:00","2023-02-14T00:00:00","2023-02-15T00:00:00","2023-02-16T00:00:00","2023-02-17T00:00:00","2023-02-20T00:00:00","2023-02-21T00:00:00","2023-02-22T00:00:00","2023-02-23T00:00:00","2023-02-24T00:00:00","2023-02-27T00:00:00","2023-02-28T00:00:00","2023-03-02T00:00:00","2023-03-03T00:00:00","2023-03-06T00:00:00","2023-03-07T00:00:00","2023-03-08T00:00:00","2023-03-09T00:00:00","2023-03-10T00:00:00","2023-03-13T00:00:00","2023-03-14T00:00:00","2023-03-15T00:00:00","2023-03-16T00:00:00","2023-03-17T00:00:00","2023-03-20T00:00:00","2023-03-21T00:00:00","2023-03-22T00:00:00","2023-03-23T00:00:00","2023-03-24T00:00:00","2023-03-27T00:00:00","2023-03-28T00:00:00","2023-03-29T00:00:00","2023-03-30T00:00:00","2023-03-31T00:00:00","2023-04-03T00:00:00","2023-04-04T00:00:00","2023-04-05T00:00:00","2023-04-06T00:00:00","2023-04-07T00:00:00","2023-04-10T00:00:00","2023-04-11T00:00:00","2023-04-12T00:00:00","2023-04-13T00:00:00","2023-04-14T00:00:00","2023-04-17T00:00:00","2023-04-18T00:00:00","2023-04-19T00:00:00","2023-04-20T00:00:00","2023-04-21T00:00:00","2023-04-24T00:00:00","2023-04-25T00:00:00","2023-04-26T00:00:00","2023-04-27T00:00:00","2023-04-28T00:00:00","2023-05-02T00:00:00","2023-05-03T00:00:00","2023-05-04T00:00:00","2023-05-08T00:00:00","2023-05-09T00:00:00","2023-05-10T00:00:00","2023-05-11T00:00:00","2023-05-12T00:00:00","2023-05-15T00:00:00","2023-05-16T00:00:00","2023-05-17T00:00:00","2023-05-18T00:00:00","2023-05-19T00:00:00","2023-05-22T00:00:00","2023-05-23T00:00:00","2023-05-24T00:00:00","2023-05-25T00:00:00","2023-05-26T00:00:00","2023-05-30T00:00:00","2023-05-31T00:00:00","2023-06-01T00:00:00","2023-06-02T00:00:00","2023-06-05T00:00:00","2023-06-07T00:00:00","2023-06-08T00:00:00","2023-06-09T00:00:00","2023-06-12T00:00:00","2023-06-13T00:00:00","2023-06-14T00:00:00","2023-06-15T00:00:00","2023-06-16T00:00:00","2023-06-19T00:00:00","2023-06-20T00:00:00","2023-06-21T00:00:00","2023-06-22T00:00:00","2023-06-23T00:00:00","2023-06-26T00:00:00","2023-06-27T00:00:00","2023-06-28T00:00:00","2023-06-29T00:00:00","2023-06-30T00:00:00"],"y":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,62900.0,63200.0,62200.0,63700.0,62600.0,62700.0,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,60300.0,61100.0,62300.0,63000.0,62100.0,62900.0,62700.0,63200.0,64000.0,63100.0,63600.0,63900.0,62300.0,65000.0,65700.0,65900.0,66000.0,66100.0,65100.0,65300.0,65600.0,65500.0,null,null,null,null,null,null,null,null,null,65100.0,65900.0,65300.0,64600.0,null,null,null,null,null,66200.0,68400.0,68500.0,68400.0,68500.0,68800.0,70300.0,72300.0,71400.0,70900.0,72200.0,71700.0,71000.0,70900.0,72000.0,null,null,71900.0,71500.0,71800.0,71200.0,71400.0,null,null,null,null,72600.0,72700.0,72400.0,72200.0],"type":"scatter","xaxis":"x5","yaxis":"y3"},{"cliponaxis":false,"marker":{"color},"name":"\uc2e4\ud604\uc190\uc775","text":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","-800","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","5,000","","","","","","","","","","","","","-900","","","","","","","","","","","","","","","","","","","","4,800","","","","","","","-1,400","","","","","","",""],"textposition":"outside","width":432000000,"x":["2023-01-02T00:00:00","2023-01-03T00:00:00","2023-01-04T00:00:00","2023-01-05T00:00:00","2023-01-06T00:00:00","2023-01-09T00:00:00","2023-01-10T00:00:00","2023-01-11T00:00:00","2023-01-12T00:00:00","2023-01-13T00:00:00","2023-01-16T00:00:00","2023-01-17T00:00:00","2023-01-18T00:00:00","2023-01-19T00:00:00","2023-01-20T00:00:00","2023-01-25T00:00:00","2023-01-26T00:00:00","2023-01-27T00:00:00","2023-01-30T00:00:00","2023-01-31T00:00:00","2023-02-01T00:00:00","2023-02-02T00:00:00","2023-02-03T00:00:00","2023-02-06T00:00:00","2023-02-07T00:00:00","2023-02-08T00:00:00","2023-02-09T00:00:00","2023-02-10T00:00:00","2023-02-13T00:00:00","2023-02-14T00:00:00","2023-02-15T00:00:00","2023-02-16T00:00:00","2023-02-17T00:00:00","2023-02-20T00:00:00","2023-02-21T00:00:00","2023-02-22T00:00:00","2023-02-23T00:00:00","2023-02-24T00:00:00","2023-02-27T00:00:00","2023-02-28T00:00:00","2023-03-02T00:00:00","2023-03-03T00:00:00","2023-03-06T00:00:00","2023-03-07T00:00:00","2023-03-08T00:00:00","2023-03-09T00:00:00","2023-03-10T00:00:00","2023-03-13T00:00:00","2023-03-14T00:00:00","2023-03-15T00:00:00","2023-03-16T00:00:00","2023-03-17T00:00:00","2023-03-20T00:00:00","2023-03-21T00:00:00","2023-03-22T00:00:00","2023-03-23T00:00:00","2023-03-24T00:00:00","2023-03-27T00:00:00","2023-03-28T00:00:00","2023-03-29T00:00:00","2023-03-30T00:00:00","2023-03-31T00:00:00","2023-04-03T00:00:00","2023-04-04T00:00:00","2023-04-05T00:00:00","2023-04-06T00:00:00","2023-04-07T00:00:00","2023-04-10T00:00:00","2023-04-11T00:00:00","2023-04-12T00:00:00","2023-04-13T00:00:00","2023-04-14T00:00:00","2023-04-17T00:00:00","2023-04-18T00:00:00","2023-04-19T00:00:00","2023-04-20T00:00:00","2023-04-21T00:00:00","2023-04-24T00:00:00","2023-04-25T00:00:00","2023-04-26T00:00:00","2023-04-27T00:00:00","2023-04-28T00:00:00","2023-05-02T00:00:00","2023-05-03T00:00:00","2023-05-04T00:00:00","2023-05-08T00:00:00","2023-05-09T00:00:00","2023-05-10T00:00:00","2023-05-11T00:00:00","2023-05-12T00:00:00","2023-05-15T00:00:00","2023-05-16T00:00:00","2023-05-17T00:00:00","2023-05-18T00:00:00","2023-05-19T00:00:00","2023-05-22T00:00:00","2023-05-23T00:00:00","2023-05-24T00:00:00","2023-05-25T00:00:00","2023-05-26T00:00:00","2023-05-30T00:00:00","2023-05-31T00:00:00","2023-06-01T00:00:00","2023-06-02T00:00:00","2023-06-05T00:00:00","2023-06-07T00:00:00","2023-06-08T00:00:00","2023-06-09T00:00:00","2023-06-12T00:00:00","2023-06-13T00:00:00","2023-06-14T00:00:00","2023-06-15T00:00:00","2023-06-16T00:00:00","2023-06-19T00:00:00","2023-06-20T00:00:00","2023-06-21T00:00:00","2023-06-22T00:00:00","2023-06-23T00:00:00","2023-06-26T00:00:00","2023-06-27T00:00:00","2023-06-28T00:00:00","2023-06-29T00:00:00","2023-06-30T00:00:00"],"y":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-800,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5000,0,0,0,0,0,0,0,0,0,0,0,0,-900,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4800,0,0,0,0,0,0,-1400,0,0,0,0,0,0,0],"type":"bar","xaxis":"x5","yaxis":"y4"},{"line":{"color":"#000000","shape":"hv"},"mode":"lines","name":"\ucd1d\uc790\uc0b0\uac00\uce58","x":["2023-01-02T00:00:00","2023-01-03T00:00:00","2023-01-04T00:00:00","2023-01-05T00:00:00","2023-01-06T00:00:00","2023-01-09T00:00:00","2023-01-10T00:00:00","2023-01-11T00:00:00","2023-01-12T00:00:00","2023-01-13T00:00:00","2023-01-16T00:00:00","2023-01-17T00:00:00","2023-01-18T00:00:00","2023-01-19T00:00:00","2023-01-20T00:00:00","2023-01-25T00:00:00","2023-01-26T00:00:00","2023-01-27T00:00:00","2023-01-30T00:00:00","2023-01-31T00:00:00","2023-02-01T00:00:00","2023-02-02T00:00:00","2023-02-03T00:00:00","2023-02-06T00:00:00","2023-02-07T00:00:00","2023-02-08T00:00:00","2023-02-09T00:00:00","2023-02-10T00:00:00","2023-02-13T00:00:00","2023-02-14T00:00:00","2023-02-15T00:00:00","2023-02-16T00:00:00","2023-02-17T00:00:00","2023-02-20T00:00:00","2023-02-21T00:00:00","2023-02-22T00:00:00","2023-02-23T00:00:00","2023-02-24T00:00:00","2023-02-27T00:00:00","2023-02-28T00:00:00","2023-03-02T00:00:00","2023-03-03T00:00:00","2023-03-06T00:00:00","2023-03-07T00:00:00","2023-03-08T00:00:00","2023-03-09T00:00:00","2023-03-10T00:00:00","2023-03-13T00:00:00","2023-03-14T00:00:00","2023-03-15T00:00:00","2023-03-16T00:00:00","2023-03-17T00:00:00","2023-03-20T00:00:00","2023-03-21T00:00:00","2023-03-22T00:00:00","2023-03-23T00:00:00","2023-03-24T00:00:00","2023-03-27T00:00:00","2023-03-28T00:00:00","2023-03-29T00:00:00","2023-03-30T00:00:00","2023-03-31T00:00:00","2023-04-03T00:00:00","2023-04-04T00:00:00","2023-04-05T00:00:00","2023-04-06T00:00:00","2023-04-07T00:00:00","2023-04-10T00:00:00","2023-04-11T00:00:00","2023-04-12T00:00:00","2023-04-13T00:00:00","2023-04-14T00:00:00","2023-04-17T00:00:00","2023-04-18T00:00:00","2023-04-19T00:00:00","2023-04-20T00:00:00","2023-04-21T00:00:00","2023-04-24T00:00:00","2023-04-25T00:00:00","2023-04-26T00:00:00","2023-04-27T00:00:00","2023-04-28T00:00:00","2023-05-02T00:00:00","2023-05-03T00:00:00","2023-05-04T00:00:00","2023-05-08T00:00:00","2023-05-09T00:00:00","2023-05-10T00:00:00","2023-05-11T00:00:00","2023-05-12T00:00:00","2023-05-15T00:00:00","2023-05-16T00:00:00","2023-05-17T00:00:00","2023-05-18T00:00:00","2023-05-19T00:00:00","2023-05-22T00:00:00","2023-05-23T00:00:00","2023-05-24T00:00:00","2023-05-25T00:00:00","2023-05-26T00:00:00","2023-05-30T00:00:00","2023-05-31T00:00:00","2023-06-01T00:00:00","2023-06-02T00:00:00","2023-06-05T00:00:00","2023-06-07T00:00:00","2023-06-08T00:00:00","2023-06-09T00:00:00","2023-06-12T00:00:00","2023-06-13T00:00:00","2023-06-14T00:00:00","2023-06-15T00:00:00","2023-06-16T00:00:00","2023-06-19T00:00:00","2023-06-20T00:00:00","2023-06-21T00:00:00","2023-06-22T00:00:00","2023-06-23T00:00:00","2023-06-26T00:00:00","2023-06-27T00:00:00","2023-06-28T00:00:00","2023-06-29T00:00:00","2023-06-30T00:00:00"],"y":[100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100300,99300,100800,99700,99800,99200,99200,99200,99200,99200,99200,99200,99200,99200,99200,99200,99200,99200,99200,99200,99200,99200,99200,99200,99200,100000,101200,101900,101000,101800,101600,102100,102900,102000,102500,102800,101200,103900,104600,104800,104900,105000,104000,104200,104500,104400,104200,104200,104200,104200,104200,104200,104200,104200,104200,104200,105000,104400,103700,103300,103300,103300,103300,103300,103300,105500,105600,105500,105600,105900,107400,109400,108500,108000,109300,108800,108100,108000,109100,108100,108100,108100,107700,108000,107400,107600,106700,106700,106700,106700,106700,106800,106500,106300],"type":"scatter","xaxis":"x5","yaxis":"y5"},{"line":{"color":"#DC143C","dash":"dash","shape":"hv"},"mode":"lines","name":"\ucd5c\uace0\uc790\uc0b0\uac00\uce58","x":["2023-01-02T00:00:00","2023-01-03T00:00:00","2023-01-04T00:00:00","2023-01-05T00:00:00","2023-01-06T00:00:00","2023-01-09T00:00:00","2023-01-10T00:00:00","2023-01-11T00:00:00","2023-01-12T00:00:00","2023-01-13T00:00:00","2023-01-16T00:00:00","2023-01-17T00:00:00","2023-01-18T00:00:00","2023-01-19T00:00:00","2023-01-20T00:00:00","2023-01-25T00:00:00","2023-01-26T00:00:00","2023-01-27T00:00:00","2023-01-30T00:00:00","2023-01-31T00:00:00","2023-02-01T00:00:00","2023-02-02T00:00:00","2023-02-03T00:00:00","2023-02-06T00:00:00","2023-02-07T00:00:00","2023-02-08T00:00:00","2023-02-09T00:00:00","2023-02-10T00:00:00","2023-02-13T00:00:00","2023-02-14T00:00:00","2023-02-15T00:00:00","2023-02-16T00:00:00","2023-02-17T00:00:00","2023-02-20T00:00:00","2023-02-21T00:00:00","2023-02-22T00:00:00","2023-02-23T00:00:00","2023-02-24T00:00:00","2023-02-27T00:00:00","2023-02-28T00:00:00","2023-03-02T00:00:00","2023-03-03T00:00:00","2023-03-06T00:00:00","2023-03-07T00:00:00","2023-03-08T00:00:00","2023-03-09T00:00:00","2023-03-10T00:00:00","2023-03-13T00:00:00","2023-03-14T00:00:00","2023-03-15T00:00:00","2023-03-16T00:00:00","2023-03-17T00:00:00","2023-03-20T00:00:00","2023-03-21T00:00:00","2023-03-22T00:00:00","2023-03-23T00:00:00","2023-03-24T00:00:00","2023-03-27T00:00:00","2023-03-28T00:00:00","2023-03-29T00:00:00","2023-03-30T00:00:00","2023-03-31T00:00:00","2023-04-03T00:00:00","2023-04-04T00:00:00","2023-04-05T00:00:00","2023-04-06T00:00:00","2023-04-07T00:00:00","2023-04-10T00:00:00","2023-04-11T00:00:00","2023-04-12T00:00:00","2023-04-13T00:00:00","2023-04-14T00:00:00","2023-04-17T00:00:00","2023-04-18T00:00:00","2023-04-19T00:00:00","2023-04-20T00:00:00","2023-04-21T00:00:00","2023-04-24T00:00:00","2023-04-25T00:00:00","2023-04-26T00:00:00","2023-04-27T00:00:00","2023-04-28T00:00:00","2023-05-02T00:00:00","2023-05-03T00:00:00","2023-05-04T00:00:00","2023-05-08T00:00:00","2023-05-09T00:00:00","2023-05-10T00:00:00","2023-05-11T00:00:00","2023-05-12T00:00:00","2023-05-15T00:00:00","2023-05-16T00:00:00","2023-05-17T00:00:00","2023-05-18T00:00:00","2023-05-19T00:00:00","2023-05-22T00:00:00","2023-05-23T00:00:00","2023-05-24T00:00:00","2023-05-25T00:00:00","2023-05-26T00:00:00","2023-05-30T00:00:00","2023-05-31T00:00:00","2023-06-01T00:00:00","2023-06-02T00:00:00","2023-06-05T00:00:00","2023-06-07T00:00:00","2023-06-08T00:00:00","2023-06-09T00:00:00","2023-06-12T00:00:00","2023-06-13T00:00:00","2023-06-14T00:00:00","2023-06-15T00:00:00","2023-06-16T00:00:00","2023-06-19T00:00:00","2023-06-20T00:00:00","2023-06-21T00:00:00","2023-06-22T00:00:00","2023-06-23T00:00:00","2023-06-26T00:00:00","2023-06-27T00:00:00","2023-06-28T00:00:00","2023-06-29T00:00:00","2023-06-30T00:00:00"],"y":[100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100000,100300,100300,100800,100800,100800,100800,100800,100800,100800,100800,100800,100800,100800,100800,100800,100800,100800,100800,100800,100800,100800,100800,100800,100800,100800,100800,101200,101900,101900,101900,101900,102100,102900,102900,102900,102900,102900,103900,104600,104800,104900,105000,105000,105000,105000,105000,105000,105000,105000,105000,105000,105000,105000,105000,105000,105000,105000,105000,105000,105000,105000,105000,105000,105000,105000,105500,105600,105600,105600,105900,107400,109400,109400,109400,109400,109400,109400,109400,109400,109400,109400,109400,109400,109400,109400,109400,109400,109400,109400,109400,109400,109400,109400,109400],"type":"scatter","xaxis":"x5","yaxis":"y5"},{"base":[100000],"cliponaxis":false,"marker":{"color":["#DC143C"]},"name":"\ucd5c\uc885\uc190\uc775","text":["\ucd5c\uc885\uc218\uc775: 6,300"],"textposition":"outside","width":864000000,"x":["2023-06-30T00:00:00"],"y":[6300],"type":"bar","xaxis":"x5","yaxis":"y5"},{"cliponaxis":false,"marker":{"color":["#DC143C","#00008B"],"line":{"color":"white","width":1},"size":12,"symbol":["triangle-up","triangle-down"]},"mode":"markers+text","name":"","text":["\ucd5c\uace0\uc790\uc0b0\uac00\uce58: 109,400","MDD: -3,100"],"textposition":["top center","bottom center"],"x":["2023-05-30T00:00:00","2023-06-30T00:00:00"],"y":[109400,106300],"type":"scatter","xaxis":"x5","yaxis":"y5"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"},"margin":{"b":0,"l":0,"r":0,"t":30}}},"xaxis":{"anchor":"y","domain":[0.0,1.0],"matches":"x5","showticklabels":false},"yaxis":{"anchor":"x","domain":[0.8400000000000001,1.0],"tickformat":",d"},"xaxis2":{"anchor":"y2","domain":[0.0,1.0],"matches":"x5","showticklabels":false},"yaxis2":{"anchor":"x2","domain":[0.7100000000000001,0.79],"dtick":"L1"},"xaxis3":{"anchor":"y3","domain":[0.0,1.0],"matches":"x5","showticklabels":false},"yaxis3":{"anchor":"x3","domain":[0.5,0.66],"tickformat":",d"},"xaxis4":{"anchor":"y4","domain":[0.0,1.0],"matches":"x5","showticklabels":false},"yaxis4":{"anchor":"x4","domain":[0.29,0.45],"tickformat":",d"},"xaxis5":{"anchor":"y5","domain":[0.0,1.0],"hoverformat":"%Y-%m-%d","showticklabels":true,"tickformat":"%Y-%m-%d"},"yaxis5":{"anchor":"x5","domain":[0.0,0.24],"tickformat":",d"},"annotations":[{"font":{"size":16},"showarrow":false,"text":"\uac00\uaca9","x":0.5,"xanchor":"center","xref":"paper","y":1.0,"yanchor":"bottom","yref":"paper"},{"font":{"size":16},"showarrow":false,"text":"\uc794\uace0\uc218\ub7c9","x":0.5,"xanchor":"center","xref":"paper","y":0.79,"yanchor":"bottom","yref":"paper"},{"font":{"size":16},"showarrow":false,"text":"\uc794\uace0\uac00\uce58","x":0.5,"xanchor":"center","xref":"paper","y":0.66,"yanchor":"bottom","yref":"paper"},{"font":{"size":16},"showarrow":false,"text":"\uc2e4\ud604\uc190\uc775","x":0.5,"xanchor":"center","xref":"paper","y":0.45,"yanchor":"bottom","yref":"paper"},{"font":{"size":16},"showarrow":false,"text":"\ucd1d\uc790\uc0b0\uac00\uce58","x":0.5,"xanchor":"center","xref":"paper","y":0.24,"yanchor":"bottom","yref":"paper"}],"margin":{"b":25,"l":25,"r":25,"t":80},"title":{"text":"\ubc31\ud14c\uc2a4\ud2b8 \uacb0\uacfc: 005930, 2023-01-02~2023-06-30","x":0.5,"y":0.98},"uniformtext":{"minsize":12,"mode":"show"},"height":800,"hovermode":"x unified","showlegend":false},                        {"modeBarButtonsToRemove": ["resetScale2d", "lasso2d", "zoomIn2d", "zoomOut2d", "select2d"], "displaylogo": false, "responsive": true}                    ).then(function(){
                            
var gd = document.getElementById('5c09f435-b2fe-4ee4-96d8-fd6bdcadc45f');
var x = new MutationObserver(function (mutations, observer) {{
        var display = window.getComputedStyle(gd).display;
        if (!display || display === 'none') {{
            console.log([gd, 'removed!']);
            Plotly.purge(gd);
            observer.disconnect();
        }}
}});

// Listen for the removal of the full notebook cells
var notebookContainer = gd.closest('#notebook-container');
if (notebookContainer) {{
    x.observe(notebookContainer, {childList: true});
}}

// Listen for the clearing of the current output cell
var outputEl = gd.closest('.output');
if (outputEl) {{
    x.observe(outputEl, {childList: true});
}}

                        })                };                });            </script>        </div>
</div>
</div>
</section>
<section id="kquant-패키지-설치-방법" class="level2">
<h2 class="anchored" data-anchor-id="kquant-패키지-설치-방법">kquant 패키지 설치 방법</h2>
<p><code>kquant</code> 패키지는 <code>pip install</code> 명령으로 설치할 수 있습니다.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install kquant</span></code></pre></div>
<p>설치 후에는 파이썬을 실행하여 다음과 같이 <code>kquant</code> 패키지가 정상적으로 임포트되는지 확인합니다.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb8-1">$ python</span>
<span id="cb8-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kquant <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> kq</span>
<span id="cb8-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> kq.__version__</span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'0.3.4'</span></span></code></pre></div>
</section>
<section id="check-api-key-설정-방법" class="level2">
<h2 class="anchored" data-anchor-id="check-api-key-설정-방법">CHECK-API KEY 설정 방법</h2>
<p>kquant 패키지는 CHECK-API를 사용하여 금융 데이터를 입수하므로 사용전에 미리 CHECK-API ID와 KEY를 다음과 같이 설정하여야 합니다.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kquant <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> kq</span>
<span id="cb9-2"></span>
<span id="cb9-3">kq.set_api(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"발급받은 API ID 문자열"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"발급받은 API KEY 문자열"</span>)</span></code></pre></div>
<p><code>set_api</code> 함수로 API ID 및 API KEY를 설정하면 설정 데이터는 사용자의 홈 디렉토리 아래의 .kquant 디렉토리 상의 credential 파일에 다음과 같은 형식으로 저장됩니다.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">API_ID</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"발급받은 API ID 문자열"</span></span>
<span id="cb10-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">API_KEY</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"발급받은 API KEY 문자열"</span></span></code></pre></div>
<p>따라서 한 번 <code>set_api</code> 함수로 API 정보를 설정하면 이 파일이 삭제되거나 손상되지 않는 한 다시 <code>set_api</code> 함수로 API 정보를 설정할 필요는 없습니다.</p>
</section>
<section id="api-참조문서" class="level2">
<h2 class="anchored" data-anchor-id="api-참조문서">API 참조문서</h2>
<ul>
<li><p><code>kquant</code> 패키지의 모든 모듈과 함수에 대한 자세한 설명을 포함하는 API 참조문서는 다음 웹페이지에서 제공합니다.</p>
<ul>
<li><a href="https://koscom.github.io/kquant" target="_blank">https://koscom.github.io/kquant/</a></li>
</ul></li>
</ul>


</section>
</section>

 ]]></description>
  <category>kquant 패키지</category>
  <category>Python</category>
  <guid>https://koscom.github.io/checkapi/posts/0007_kquant_intro/</guid>
  <pubDate>Tue, 09 Jan 2024 15:00:00 GMT</pubDate>
  <media:content url="https://koscom.github.io/checkapi/posts/0007_kquant_intro/kquant_logo.png" medium="image" type="image/png" height="41" width="144"/>
</item>
<item>
  <title>CHECK-API 사용량 확인 방법</title>
  <link>https://koscom.github.io/checkapi/posts/0006_check_quota/</link>
  <description><![CDATA[ 




<section id="check-api-사용량-확인-방법" class="level1 page-columns page-full">
<h1>CHECK-API 사용량 확인 방법</h1>
<p>본 글에서는 CHECK-API의 사용량을 확인하는 방법을 설명합니다.</p>
<section id="check-api-사용량-제한" class="level2">
<h2 class="anchored" data-anchor-id="check-api-사용량-제한">CHECK-API 사용량 제한</h2>
<p>CHECK-API는 사용 요금제에 따라 사용량을 제한하고 있습니다. 각 요금제에 따른 사용량 제한은 다음과 같습니다.</p>
<table class="table">
<thead>
<tr class="header">
<th>분류</th>
<th>LEVEL</th>
<th>일간 API 사용량</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>CHECK 사용자</td>
<td>BASIC</td>
<td>0.2 GB / 일</td>
</tr>
<tr class="even">
<td>-</td>
<td>PLUS</td>
<td>0.5 GB / 일</td>
</tr>
<tr class="odd">
<td>CHECK 미사용자</td>
<td>Lv.1</td>
<td>1.0 GB / 일</td>
</tr>
<tr class="even">
<td>-</td>
<td>Lv.2</td>
<td>5.0 GB / 일</td>
</tr>
<tr class="odd">
<td>-</td>
<td>Lv.3</td>
<td>10.0 GB / 일</td>
</tr>
</tbody>
</table>
<p>사용량을 초과하여 사용하는 경우 별도의 공지 없이 사용이 제한될 수도 있으므로 사용에 유의해 주시기 바랍니다.</p>
</section>
<section id="check-api-사용량-확인-방법-1" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="check-api-사용량-확인-방법-1">CHECK-API 사용량 확인 방법</h2>
<p>CHECK-API 사용량은 CHECK-API 공식 홈페이지에서 로그인하여 확인할 수 있습니다.</p>
<ul>
<li><a href="https://checkapi.koscom.co.kr/" target="_blank">https://checkapi.koscom.co.kr/</a></li>
</ul>
<ol type="1">
<li>홈페이지에 ID와 인증키(API-KEY) 값을 입력하여 로그인합니다.</li>
</ol>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0006_check_quota/check_api_quota_1.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 1: CHECK-API 홈페이지 로그인 화면</figcaption>
</figure>
</div>
<ol start="2" type="1">
<li>로그인 후 나타나는 우측 상단의 아이디 부분을 클릭합니다.</li>
</ol>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0006_check_quota/check_api_quota_2.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 2: 사용량 확인 방법</figcaption>
</figure>
</div>
<ol start="3" type="1">
<li>1일 사용한도 및 현재 당일 사용량 등의 사용 정보가 표시됩니다.</li>
</ol>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0006_check_quota/check_api_quota_3.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 3: CHECK-API 사용량 확인 화면</figcaption>
</figure>
</div>


</section>
</section>

 ]]></description>
  <category>CHECK-API 사용법</category>
  <guid>https://koscom.github.io/checkapi/posts/0006_check_quota/</guid>
  <pubDate>Tue, 02 Jan 2024 15:00:00 GMT</pubDate>
  <media:content url="https://koscom.github.io/checkapi/posts/0006_check_quota/check_api_quota_3.png" medium="image" type="image/png" height="79" width="144"/>
</item>
<item>
  <title>CHECK-API 사용법 1</title>
  <link>https://koscom.github.io/checkapi/posts/0005_check_tutorial1/</link>
  <description><![CDATA[ 




<section id="check-api-사용법-1" class="level1 page-columns page-full">
<h1>CHECK-API 사용법 1</h1>
<p>본 글에서는 파이썬 언어로 CHECK-API를 호출하고 사용하는 방법을 설명합니다.</p>
<section id="준비사항" class="level2">
<h2 class="anchored" data-anchor-id="준비사항">준비사항</h2>
<p>여기에서는 컴퓨터에 이미 파이썬 배포판과 주피터랩이 설치되어 있다고 가정합니다.</p>
<p>만약 파이썬 배포판이 설치되어 있지 않은 경우에는 다음 블로그 글을 참고하여 설치해 주세요.</p>
<ul>
<li><a href="../../posts/0002_env_install_1/index.html" target="_blank">환경 구축 1 : 파이썬 설치</a></li>
</ul>
<p>파이썬 패키지의 설치 및 관리 방법에 대해서는 다음 블로그 글을 참고해 주세요.</p>
<ul>
<li><a href="../../posts/0003_env_install_2/index.html" target="_blank">환경 구축 2 : 파이썬 패키지 설치</a></li>
</ul>
<p>주피터랩이 설치되어 있지 않은 경우에는 다음 블로그 글을 참고하여 설치해 주세요.</p>
<ul>
<li><a href="../../posts/0004_env_install_3/index.html" target="_blank">환경 구축 3 : 주피터랩 설치 및 사용</a></li>
</ul>
<p>본 설명글은 주피터랩에서 노트북으로 진행합니다.</p>
</section>
<section id="requests-패키지-설치" class="level2">
<h2 class="anchored" data-anchor-id="requests-패키지-설치">requests 패키지 설치</h2>
<p>파이썬으로 CHECK-API를 호출하여 사용하기 위해서는 requests 파이썬 패키지가 필요합니다. requests 패키지는 명령 프롬프트에서 다음과 같이 pip 명령으로 설치할 수 있습니다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install requests</span></code></pre></div>
</section>
<section id="check-api-아이디-및-인증키-확인" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="check-api-아이디-및-인증키-확인">CHECK-API 아이디 및 인증키 확인</h2>
<p>CHECK-API를 호출하기 위해서는 CHECK-API 아이디와 인증키가 필요합니다. CHECK-API 서비스를 신청한 고객은 CHECK 단말기에서 아이디와 인증키를 확인할 수 있습니다. 자세한 방법은 CHECK-API 공식 홈페이지를 참고하시면 됩니다.</p>
<ul>
<li><a href="https://checkapi.koscom.co.kr/intro/introhome" target="_blank">https://checkapi.koscom.co.kr/intro/introhome</a></li>
</ul>
<p>본 설명글에서는 확인한 아이디 및 인증키를 다음과 같이 변수에 넣어 사용합니다. 본 예제 코드는 파이썬 코드로 아이디 및 인증키의 값은 가상의 코드입니다. 실제 값은 사용자마다 다릅니다.</p>
<div class="page-columns page-full"><p></p><div class="no-row-height column-margin column-container"><span class="margin-aside">코드 셀 1 <br>이 코드를 주피터랩에서 실행합니다.</span></div></div>
<div id="af55aff5" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="annotated-cell-2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python code-annotation-code number-lines code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 코드 셀 1 (이 코드를 주피터랩에서 실행합니다.)</span></span>
<span id="annotated-cell-2-2"></span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-2" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-2-3" class="code-annotation-target">CHECK_API_ID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id_xxxxxxx"</span></span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-2" data-target-annotation="2" onclick="event.preventDefault();">2</a><span id="annotated-cell-2-4" class="code-annotation-target">CHECK_API_KEY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"key_xxxxxxx"</span></span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-2" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-2" data-code-lines="3" data-code-annotation="1">CHECK-API 아이디 값을 문자열로 저장</span>
</dd>
<dt data-target-cell="annotated-cell-2" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-2" data-code-lines="4" data-code-annotation="2">CHECK-API 인증키 값을 문자열로 저장</span>
</dd>
</dl>
</div>
</div>
</section>
<section id="사용하고자-하는-api의-명세-확인" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="사용하고자-하는-api의-명세-확인">사용하고자 하는 API의 명세 확인</h2>
<p>우선 CHECK-API 공식 홈페이지에서 사용하고자 하는 API의 명세(specification)를 확인합니다. API 명세는 다음과 같은 사항으로 구성되어 있습니다.</p>
<ul>
<li>호출 명세 (Request)
<ul>
<li>호출 주소 (URL)
<ul>
<li>호스트 주소 (HOST URL)</li>
<li>API 주소 (API URL)</li>
</ul></li>
<li>인수 (Parameter)</li>
</ul></li>
<li>결과 명세 (Response)
<ul>
<li>호출 결과</li>
<li>데이터 필드 (Data Set)</li>
<li>오류 메시지 (Error Message)</li>
</ul></li>
</ul>
<p>예를 들어 주식종목의 코드정보를 호출하는 API의 명세는 다음 CHECK-API 공식홈페이지에 나와있습니다.</p>
<ul>
<li><a href="https://checkapi.koscom.co.kr/stock/m001code" target="_blank">https://checkapi.koscom.co.kr/stock/m001code</a></li>
</ul>
<p>주식종목 코드정보 API의 호출 명세를 보여주는 화면은 다음과 같습니다.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0005_check_tutorial1/CHECK_API_1.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 1: 주식종목 코드정보 API의 호출 명세</figcaption>
</figure>
</div>
<p>주식종목 코드정보 API의 결과 명세를 보여주는 화면은 다음과 같습니다.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0005_check_tutorial1/CHECK_API_2.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 2: 주식종목 코드정보 API의 결과 명세</figcaption>
</figure>
</div>
</section>
<section id="api-호출" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="api-호출">API 호출</h2>
<p>우선 API 명세 화면에서 보여주는 해당 API의 호출정보를 다음과 같이 파이썬 코드로 저장합니다.</p>
<div class="page-columns page-full"><p></p><div class="no-row-height column-margin column-container"><span class="margin-aside">코드 셀 2</span></div></div>
<div id="81896fb0" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="annotated-cell-3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python code-annotation-code number-lines code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 코드 셀 2</span></span>
<span id="annotated-cell-3-2"></span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-3" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-3-3" class="code-annotation-target">host_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://checkapi.koscom.co.kr"</span></span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-3" data-target-annotation="2" onclick="event.preventDefault();">2</a><span id="annotated-cell-3-4" class="code-annotation-target">api_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/stock/m001/code_info"</span></span>
<span id="annotated-cell-3-5">payload <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="annotated-cell-3-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cust_id"</span>: CHECK_API_ID,</span>
<span id="annotated-cell-3-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auth_key"</span>: CHECK_API_KEY,</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-3" data-target-annotation="3" onclick="event.preventDefault();">3</a><span id="annotated-cell-3-8" class="code-annotation-target">}</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-3" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-3" data-code-lines="3" data-code-annotation="1">호스트 주소를 문자열로 저장</span>
</dd>
<dt data-target-cell="annotated-cell-3" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-3" data-code-lines="4" data-code-annotation="2">API 주소를 문자열로 저장</span>
</dd>
<dt data-target-cell="annotated-cell-3" data-target-annotation="3">3</dt>
<dd>
<span data-code-cell="annotated-cell-3" data-code-lines="8" data-code-annotation="3">인수를 딕셔너리로 저장</span>
</dd>
</dl>
</div>
</div>
<p>저장된 호출정보를 기반으로 requests 패키지의 POST 호출 기능을 사용하여 다음과 같이 API 호출을 할 수 있습니다.</p>
<div class="page-columns page-full"><p></p><div class="no-row-height column-margin column-container"><span class="margin-aside">코드 셀 3</span></div></div>
<div id="de9b24d3" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="annotated-cell-4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python code-annotation-code number-lines code-with-copy code-annotated"><code class="sourceCode python"><a class="code-annotation-anchor" data-target-cell="annotated-cell-4" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-4-1" class="code-annotation-target"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> requests <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> post</span>
<span id="annotated-cell-4-2"></span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-4" data-target-annotation="2" onclick="event.preventDefault();">2</a><span id="annotated-cell-4-3" class="code-annotation-target">r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> post(host_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> api_url, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>payload)</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-4" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-4" data-code-lines="1" data-code-annotation="1">requests 패키지에서 post 함수 임포트</span>
</dd>
<dt data-target-cell="annotated-cell-4" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-4" data-code-lines="3" data-code-annotation="2">API를 호출하여 결과를 변수 r에 넣음</span>
</dd>
</dl>
</div>
</div>
</section>
<section id="호출-결과" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="호출-결과">호출 결과</h2>
<p>호출결과는 <code>Response</code> 형식으로 저장되며 <code>status_code</code> 속성으로 HTTP 호출결과를 볼 수 있습니다. <code>status_code</code> 속성이 <code>200</code>인 경우 호출 자체는 정상적으로 이루어진 경우입니다.</p>
<div class="page-columns page-full"><p></p><div class="no-row-height column-margin column-container"><span class="margin-aside">코드 셀 4</span></div></div>
<div id="122a79e0" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(r)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>requests.models.Response</code></pre>
</div>
</div>
<div class="page-columns page-full"><p></p><div class="no-row-height column-margin column-container"><span class="margin-aside">코드 셀 5</span></div></div>
<div id="8a4e3d3b" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1">r.status_code</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>200</code></pre>
</div>
</div>
<p>실제 데이터는 <code>Response</code> 객체의 <code>json()</code> 메서드를 호출하여 얻을 수 있습니다. <code>json()</code> 메서드는 <code>success</code>, <code>results</code> 키를 가지는 딕셔너리 객체입니다.</p>
<ul>
<li><code>success</code>: 데이터가 정상적으로 반환되었는지 여부. CHECK-API 아이디/인증키가 맞지 않거나 기타 올바른 인수를 받지 못하여 정상적인 <code>results</code> 값이 없는 경우 또는 해당하는 데이터가 존재하지 않는 경우 <code>False</code> 값을 반환합니다.</li>
<li><code>results</code>: 딕셔너리 형태의 데이터 셋</li>
</ul>
<div class="page-columns page-full"><p></p><div class="no-row-height column-margin column-container"><span class="margin-aside">코드 셀 6</span></div></div>
<div id="9229614d" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.json()</span></code></pre></div>
</div>
<div class="page-columns page-full"><p></p><div class="no-row-height column-margin column-container"><span class="margin-aside">코드 셀 7</span></div></div>
<div id="c5a571d9" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb7-1">data.keys()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>dict_keys(['success', 'results'])</code></pre>
</div>
</div>
<div class="page-columns page-full"><p></p><div class="no-row-height column-margin column-container"><span class="margin-aside">코드 셀 8</span></div></div>
<div id="e20c4b2c" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb9-1">data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"success"</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>True</code></pre>
</div>
</div>
<p>json 데이터의 <code>results</code> 값에 API 결과 명세에 따른 실제 데이터 셋이 반환됩니다. 대부분의 경우 딕셔너리의 리스트(list of dictionary) 형식입니다.</p>
<p>예제의 주식종목 코드정보의 경우 전종목의 코드정보가 반환되므로 일부 데이터만 살펴보면 다음과 같습니다.</p>
<div class="page-columns page-full"><p></p><div class="no-row-height column-margin column-container"><span class="margin-aside">코드 셀 9</span></div></div>
<div id="a59b3c3f" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb11-1">results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"results"</span>]</span>
<span id="cb11-2"></span>
<span id="cb11-3">results[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>[{'F16012': 'KR7000020008',
  'F16013': '000020',
  'F16002': '동화약품',
  'F16004': 'DongwhaPharm',
  'F34501': 'ST',
  'F18070': 0},
 {'F16012': 'KR7000040006',
  'F16013': '000040',
  'F16002': 'KR모터스',
  'F16004': 'KR MOTORS',
  'F34501': 'ST',
  'F18070': 0},
 {'F16012': 'KR7000050005',
  'F16013': '000050',
  'F16002': '경방',
  'F16004': 'Kyungbang',
  'F34501': 'ST',
  'F18070': 0},
 {'F16012': 'KR7000070003',
  'F16013': '000070',
  'F16002': '삼양홀딩스',
  'F16004': 'SAMYANGHOLDINGS',
  'F34501': 'ST',
  'F18070': 0},
 {'F16012': 'KR7000071001',
  'F16013': '000075',
  'F16002': '삼양홀딩스우',
  'F16004': 'SAMYANGHOLDINGS(1P)',
  'F34501': 'ST',
  'F18070': 0}]</code></pre>
</div>
</div>
</section>
<section id="잘못된-호출의-경우" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="잘못된-호출의-경우">잘못된 호출의 경우</h2>
<p>다음과 같은 경우에는 API 호출로 올바른 데이터를 얻지 못할 수 있습니다.</p>
<ul>
<li>호출 URL이 잘못된 경우</li>
<li>인수가 잘못된 경우</li>
</ul>
<section id="호출-url이-잘못된-경우" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="호출-url이-잘못된-경우">호출 URL이 잘못된 경우</h3>
<p>API 호출 URL이 잘못되어 API 호출 자체가 실패한 경우에는 반환된 <code>status_code</code>가 200이 아닌 값을 가집니다.</p>
<div class="page-columns page-full"><p></p><div class="no-row-height column-margin column-container"><span class="margin-aside">코드 셀 10</span></div></div>
<div id="7910efbb" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="annotated-cell-11" style="background: #f1f3f5;"><pre class="sourceCode numberSource python code-annotation-code number-lines code-with-copy code-annotated"><code class="sourceCode python"><a class="code-annotation-anchor" data-target-cell="annotated-cell-11" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-11-1" class="code-annotation-target">api_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/stock/m001/codeinfo"</span></span>
<span id="annotated-cell-11-2"></span>
<span id="annotated-cell-11-3">r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> post(host_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> api_url, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>payload)</span>
<span id="annotated-cell-11-4"></span>
<span id="annotated-cell-11-5">r.status_code</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-11" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-11" data-code-lines="1" data-code-annotation="1">올바른 URL이 <code>code_info</code>인데 잘못하여 <code>codeinfo</code>로 호출한 경우</span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre><code>404</code></pre>
</div>
</div>
</section>
<section id="인수가-잘못된-경우" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="인수가-잘못된-경우">인수가 잘못된 경우</h3>
<p>정상적으로 API 호출은 되었으나 인수가 잘못된 경우에는 <code>status_code</code>는 <code>200</code> 정상 코드가 나오지만 json 데이터의 <code>success</code> 필드의 값이 <code>False</code>가 나옵니다. 또한 json 데이터에 <code>results</code> 필드가 존재하지 않습니다.</p>
<div class="page-columns page-full"><p></p><div class="no-row-height column-margin column-container"><span class="margin-aside">코드 셀 11</span></div></div>
<div id="da472a34" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="annotated-cell-12" style="background: #f1f3f5;"><pre class="sourceCode numberSource python code-annotation-code number-lines code-with-copy code-annotated"><code class="sourceCode python"><a class="code-annotation-anchor" data-target-cell="annotated-cell-12" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-12-1" class="code-annotation-target">api_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/stock/m001/code_info"</span></span>
<span id="annotated-cell-12-2">payload <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="annotated-cell-12-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cust_id"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wrong_id"</span>,</span>
<span id="annotated-cell-12-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auth_key"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wrong_key"</span>,</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-12" data-target-annotation="2" onclick="event.preventDefault();">2</a><span id="annotated-cell-12-5" class="code-annotation-target">}</span>
<span id="annotated-cell-12-6"></span>
<span id="annotated-cell-12-7">r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> post(host_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> api_url, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>payload)</span>
<span id="annotated-cell-12-8"></span>
<span id="annotated-cell-12-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(r.status_code)</span>
<span id="annotated-cell-12-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(r.json()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"success"</span>])</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-12" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-12" data-code-lines="1" data-code-annotation="1">올바른 URL로 호출</span>
</dd>
<dt data-target-cell="annotated-cell-12" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-12" data-code-lines="5" data-code-annotation="2">아이디와 인증키 값이 잘못됨</span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>200
False</code></pre>
</div>
</div>
<div class="page-columns page-full"><p></p><div class="no-row-height column-margin column-container"><span class="margin-aside">코드 셀 12</span></div></div>
<div id="2c5b714b" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb15-1">r.json()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"results"</span>]</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>KeyError: 'results'</code></pre>
</div>
</div>


</section>
</section>
</section>

 ]]></description>
  <category>CHECK-API 사용법</category>
  <guid>https://koscom.github.io/checkapi/posts/0005_check_tutorial1/</guid>
  <pubDate>Wed, 20 Dec 2023 15:00:00 GMT</pubDate>
  <media:content url="https://koscom.github.io/checkapi/posts/0005_check_tutorial1/CHECK_API_logo.png" medium="image" type="image/png" height="22" width="144"/>
</item>
<item>
  <title>환경 구축 3 : 주피터랩 설치 및 사용</title>
  <link>https://koscom.github.io/checkapi/posts/0004_env_install_3/</link>
  <description><![CDATA[ 




<section id="환경-구축-3-주피터랩-설치-및-사용" class="level1 page-columns page-full">
<h1>환경 구축 3 : 주피터랩 설치 및 사용</h1>
<p>본 글에서는 CHECK-API를 활용하기 위해 필요한 주피터랩(JupyterLab) 패키지를 설치하고 사용하는 법을 설명합니다.</p>
<section id="준비사항" class="level2">
<h2 class="anchored" data-anchor-id="준비사항">준비사항</h2>
<p>여기에서는 컴퓨터에 이미 Mambaforge 기반의 파이썬 배포판이 설치되어 있다고 가정합니다.</p>
<p>만약 파이썬 배포판이 설치되어 있지 않은 경우에는 다음 블로그 글을 참고하여 설치해 주세요.</p>
<ul>
<li><a href="../../posts/0002_env_install_1/index.html" target="_blank">환경 구축 1 : 파이썬 설치</a></li>
</ul>
<p>또한 이 글에서 설명하는 파이썬 명령을 사용하려면 윈도우 실행 메뉴에서 “Miniforge3” &gt; “Miniforge Prompt” 메뉴를 선택하여 Miniforge 프롬프트를 시작해야 합니다.</p>
</section>
<section id="주피터랩jupyterlab-패키지-소개" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="주피터랩jupyterlab-패키지-소개">주피터랩(JupyterLab) 패키지 소개</h2>
<p>주피터랩(JupyterLab)은 주피터 노트북(Jupyter Notebook)이라는 패키지의 발전된 버전으로 파이썬 코드 실행과 문서작성을 동시에 할 수 있는 노트북 형태의 웹브라우저 환경을 제공하는 패키지로 다음과 같은 특징을 가집니다.</p>
<ul>
<li>웹화면에서 파이썬 코드를 작성하고 실행된 코드의 결과는 해당 웹화면에서 바로 볼 수 있습니다.</li>
<li>상호작용(interaction)이 가능한 웹 시각화를 쉽게 구현할 수 있습니다.</li>
<li>하나의 노트북 내에 코드 뿐 아니라 마크다운 형식의 문서를 작성할 수 있습니다.</li>
</ul>
<p>주피터랩에 대한 자세한 설명은 공식 웹사이트를 참조하시기 바랍니다.</p>
<ul>
<li><a href="https://jupyterlab.readthedocs.io/en/latest/" target="_blank">https://jupyterlab.readthedocs.io/en/latest/</a></li>
</ul>
<p>금융 데이터 분석의 경우 다양한 분석코드를 수시로 실행하여 결과를 빠르게 검토하고 그 결과를 공유해야 하는 경우가 많으므로 다른 프로그램 개발과정과 달리 짧은 코드를 쉽게 실행하고 결과를 웹화면에서 바로 시각화하여 볼 수 있는 주피터 노트북의 사용이 유리하므로 설치를 권장드립니다.</p>
<p>본 블로그에서는 주피터랩을 기반으로 CHECK-API를 사용한 금융 데이터 분석의 예제를 소개하므로 주피터랩을 설치하면 본 블로그의 예제를 바로 실행할 수 있습니다.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0004_env_install_3/JupyterLab00.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 1: 주피터랩 실행 화면</figcaption>
</figure>
</div>
</section>
<section id="주피터랩-설치" class="level2">
<h2 class="anchored" data-anchor-id="주피터랩-설치">주피터랩 설치</h2>
<p>주피터랩 패키지는 다음과 같이 <code>pip</code> 명령으로 설치할 수 있습니다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install jupyterlab</span></code></pre></div>
<p>pip 명령의 사용 방법에 대해서는 다음 블로그 글을 참고해 주세요.</p>
<ul>
<li><a href="../../posts/0003_env_install_2/index.html" target="_blank">환경 구축 2 : 파이썬 패키지 설치</a></li>
</ul>
</section>
<section id="주피터랩-서버-실행" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="주피터랩-서버-실행">주피터랩 서버 실행</h2>
<p>주피터랩은 웹기반 애플리케이션이므로 주피터랩을 사용하기 위해서는 먼저 웹서버 역할을 하는 주피터랩 서버를 실행해야 합니다.</p>
<p>주피터랩 서버를 실행하려면 파이썬 실행이 가능한 Miniforge 프롬프트나 터미널 환경을 열고 작업 디렉토리로 이동한 다음 다음 명령을 실행합니다.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jupyter</span> lab</span></code></pre></div>
<p>정상적으로 실행된다면 다음과 같은 메세지가 나옵니다. (세부적인 사항은 본 예제의 결과와 다를 수 있습니다.)</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">...</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">생략</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[I</span> 2023-12-12 14:25:09.870 ServerApp] Jupyter Server 2.12.1 is running at:</span>
<span id="cb3-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[I</span> 2023-12-12 14:25:09.870 ServerApp] http://localhost:8888/lab<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">?</span>token=8248ef069e8f3c9eeb48c584bb54c4a0fa0b33af02a5fa83</span>
<span id="cb3-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[I</span> 2023-12-12 14:25:09.886 ServerApp]     http://127.0.0.1:8888/lab<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">?</span>token=8248ef069e8f3c9eeb48c584bb54c4a0fa0b33af02a5fa83</span>
<span id="cb3-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[I</span> 2023-12-12 14:25:09.886 ServerApp] Use Control-C to stop this server and shut down all kernels <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">twice</span> to skip confirmation<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb3-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[C</span> 2023-12-12 14:25:09.964 ServerApp]</span>
<span id="cb3-8"></span>
<span id="cb3-9">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">To</span> access the server, open this file in a browser:</span>
<span id="cb3-10">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">file:///C:/Users/KOSCOM/AppData/Roaming/jupyter/runtime/jpserver-276-open.html</span></span>
<span id="cb3-11">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Or</span> copy and paste one of these URLs:</span>
<span id="cb3-12">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">http://localhost:8888/lab?token=8248ef069e8f3c9eeb48c584bb54c4a0fa0b33af02a5fa83</span></span>
<span id="cb3-13">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">http://127.0.0.1:8888/lab?token=8248ef069e8f3c9eeb48c584bb54c4a0fa0b33af02a5fa83</span></span>
<span id="cb3-14"></span>
<span id="cb3-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">...</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">생략</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">...</span></span></code></pre></div>
<p>마지막 행에 보이는 것이 주피터랩을 실행할 수 있는 URL 주소입니다. 이 주소를 복사하여 웹브라우저의 주소창에 넣으면 웹프라우저에 다음과 같은 주피터랩 최초 실행 화면이 나옵니다.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0004_env_install_3/JupyterLab01.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 2: 주피터랩 최초 실행 화면</figcaption>
</figure>
</div>
</section>
<section id="주피터랩-사용" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="주피터랩-사용">주피터랩 사용</h2>
<section id="노트북-생성" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="노트북-생성">노트북 생성</h3>
<p>주피터랩에서 코드를 실행하거나 문서를 작성하러면 노트북 파일을 생성해야 합니다.</p>
<p>주피터랩 화면의 메뉴에서</p>
<blockquote class="blockquote">
<p>“File” &gt; “New” &gt; “Notebook”</p>
</blockquote>
<p>메뉴를 선택하거나 화면상에서</p>
<blockquote class="blockquote">
<p>“Notebook” &gt; “Python 3 (ipykernel)”</p>
</blockquote>
<p>이라고 쓰인 버튼을 클릭하면 다음 화면과 같이 신규 노트북이 생성됩니다.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0004_env_install_3/JupyterLab02.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 3: 주피터랩 노트북 생성 화면</figcaption>
</figure>
</div>
</section>
<section id="노트북에서-코드-사용" class="level3">
<h3 class="anchored" data-anchor-id="노트북에서-코드-사용">노트북에서 코드 사용</h3>
<p>노트북화면의 셀(cell)에서 파이썬 코드를 입력하고 Shift 버튼과 Enter 버튼을 동시에 누르면 코드가 실행되고 샐의 마지막 행에 있는 파이썬 변수의 값이 표시됩니다. Enter 버튼만 누르는 경우에는 코드 입력 라인이 바뀌뿐 코드가 실행되지는 않습니다.</p>
<p>예를 들어 다음과 같이 입력하면 값이 0으로 채워진 Pandas 데이터프레임을 생성하고 그 결과를 보여줍니다.</p>
<div id="a6cc3240" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb4-3"></span>
<span id="cb4-4">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(np.zeros(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb4-5"></span>
<span id="cb4-6">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">0</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>0.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>0.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>0.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>0.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>0.0</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
</section>
<section id="노트북에서-문서-사용" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="노트북에서-문서-사용">노트북에서 문서 사용</h3>
<p>노트북에 코드가 아닌 문서를 넣기 위헤서는 셀을 “Code” 유형에서 “Markdown” 유형으로 변경해야 합니다. 셀 유형을 변경하려면 유형을 변경할 셀을 선택한 후 노트북 상단 버튼에서 “Code”라고 표시되어 있는 버튼을 클릭하여 “Markdown”으로 바꿉니다.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0004_env_install_3/JupyterLab03.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 4: 주피터랩 노트북에서 셀 유형 변경</figcaption>
</figure>
</div>
<p>셀 유형이 “Markdown”으로 바뀌면 Markdown 형식으로 문서를 작성할 수 있습니다. Markdown 형식은 간단한 문서작성을 위한 문법으로 사용법은 다음 웹사이트를 참조하시면 됩니다.</p>
<ul>
<li><a href="https://ko.wikipedia.org/wiki/마크다운" target="_blank">https://ko.wikipedia.org/wiki/마크다운</a></li>
</ul>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0004_env_install_3/JupyterLab04.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 5: 주피터랩 노트북에서 마크다운 문서 작성</figcaption>
</figure>
</div>
<p>마크다운 문서를 작성한 후에 코드 실행의 경우와 마찬가지로 Shift + Enter 버튼을 누르면 원하는 형식으로 표시됩니다.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0004_env_install_3/JupyterLab05.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 6: 주피터랩 노트북에서 마크다운 문서 표시</figcaption>
</figure>
</div>
</section>
<section id="노트북-저장" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="노트북-저장">노트북 저장</h3>
<p>노트북을 저장하려면 상단 메뉴에서</p>
<blockquote class="blockquote">
<p>“File” &gt; “Save Notebook”</p>
</blockquote>
<p>메뉴를 선택합니다.</p>
<p>신규로 생성된 노트북의 경우 다음과 같이 파일 이름을 변경하는 다이얼로그가 나타납니다. 이 다이얼로그에서 원하는 이름으로 변경할 수 있습니다.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0004_env_install_3/JupyterLab06.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 7: 주피터랩 노트북 저장</figcaption>
</figure>
</div>
</section>
<section id="노트북-종료" class="level3">
<h3 class="anchored" data-anchor-id="노트북-종료">노트북 종료</h3>
<p>완성된 노트북을 종료하기 위해서는 상단 메뉴에서</p>
<blockquote class="blockquote">
<p>“File” &gt; “Close and Shut Down Notebook”</p>
</blockquote>
<p>메뉴를 선택합니다.</p>
</section>
</section>
<section id="주피터랩-서버-종료" class="level2">
<h2 class="anchored" data-anchor-id="주피터랩-서버-종료">주피터랩 서버 종료</h2>
<p>주피터랩 사용이 완전히 끝난 후에는 주피터랩 웹 서버를 종료할 수 있습니다. 서버를 종료하려면 주피터랩 서버를 가동시킨 터미널 화면을 종료하거나 터미널에서 Control + C 버튼을 두번 연속 누르면 됩니다.</p>


</section>
</section>

 ]]></description>
  <category>환경구축</category>
  <category>Python</category>
  <guid>https://koscom.github.io/checkapi/posts/0004_env_install_3/</guid>
  <pubDate>Mon, 11 Dec 2023 15:00:00 GMT</pubDate>
  <media:content url="https://koscom.github.io/checkapi/posts/0004_env_install_3/jupyterlab_log.png" medium="image" type="image/png" height="72" width="144"/>
</item>
<item>
  <title>환경 구축 2 : 파이썬 패키지 설치</title>
  <link>https://koscom.github.io/checkapi/posts/0003_env_install_2/</link>
  <description><![CDATA[ 




<section id="환경-구축-2-파이썬-패키지-설치" class="level1 page-columns page-full">
<h1>환경 구축 2 : 파이썬 패키지 설치</h1>
<p>본 글에서는 CHECK-API를 활용하기 위해 필요한 파이썬 패키지를 설치하는 법을 설명합니다.</p>
<section id="준비사항" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="준비사항">준비사항</h2>
<p>여기에서는 컴퓨터에 이미 Mambaforge 기반의 파이썬 배포판이 설치되어 있다고 가정합니다.</p>
<p>만약 파이썬 배포판이 설치되어 있지 않은 경우에는 다음 블로그 글을 참고하여 설치해 주세요.</p>
<ul>
<li><a href="../../posts/0002_env_install_1/index.html" target="_blank">환경 구축 1 : 파이썬 설치</a></li>
</ul>
<p>또한 이 글에서 설명하는 설치 명령을 사용하려면 윈도우 실행 메뉴에서 “Miniforge3” &gt; “Miniforge Prompt” 메뉴를 선택하여 Miniforge 프롬프트를 시작해야 합니다.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0003_env_install_2/miniforge_07.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 1: 윈도우에서 Miniforge 실행 메뉴</figcaption>
</figure>
</div>
</section>
<section id="추천-파이썬-패키지-목록" class="level2">
<h2 class="anchored" data-anchor-id="추천-파이썬-패키지-목록">추천 파이썬 패키지 목록</h2>
<p>CHECK-API를 활용하는데 도움이 되는 중요 파이썬 패키지에는 다음과 같은 것들이 있습니다. 이 목록은 일부일 뿐이며 사용하고자 하는 목적에 따라 이외에도 다양한 패키지를 추가해야 할 수 있습니다.</p>
<ul>
<li>numpy: 수치해석</li>
<li>pandas: 데이터 분석</li>
<li>jupyterlab: 노트북 형식의 코드 개발</li>
<li>statsmodels: 통계분석</li>
<li>tensorflow: 머신러닝</li>
<li>torch: 머신러닝</li>
<li>requests: CHECK-API 호출</li>
<li>python-dateutil: 날짜 처리</li>
<li>matplotlib: 시각화</li>
<li>seaborn: 통계 시각화</li>
<li>plotly: 인터랙티브 시각화</li>
<li>dash: 대시보드 제작</li>
<li>flask: 대시보드를 위한 웹서버</li>
</ul>
<p>추천 패키지의 전체 목록은 다음 링크에 있는 <code>requirements.txt</code> 파일에 정리되어 있습니다.</p>
<ul>
<li><a href="./requirements.txt" target="_blank">윈도우용 requirements.txt 파일 링크</a></li>
<li><a href="./requirements.mac.txt" target="_blank">맥용 requirements.mac.txt 파일 링크</a></li>
<li><a href="./requirements.linux.txt" target="_blank">리눅스용 requirements.linux.txt 파일 링크</a></li>
</ul>
</section>
<section id="pip-명령을-사용한-패키지-설치" class="level2">
<h2 class="anchored" data-anchor-id="pip-명령을-사용한-패키지-설치"><code>pip</code> 명령을 사용한 패키지 설치</h2>
<p>파이썬에서 패키지를 설치할 때는 명령 프롬프트 또는 터미널 창에서 다음과 같은 형식으로 <code>pip</code> 명령을 사용합니다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install 설치하고자하는_패키지_이름 <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">설치하고자하는_패키지_이름</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
<p>예를 들어 numpy 패키지와 pandas 패키지를 설치하려면 다음과 같은 명령을 사용합니다.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install numpy pandas</span></code></pre></div>
</section>
<section id="ssl-인증서-오류가-발생하는-경우" class="level2">
<h2 class="anchored" data-anchor-id="ssl-인증서-오류가-발생하는-경우">ssl 인증서 오류가 발생하는 경우</h2>
<p>회사에서 pip 명령을 사용하는 경우 방화벽이나 프록시 설정으로 인해 다음과 같은 오류가 발생할 수 있습니다.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">SSLError</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">SSLCertVerificationError</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1,&nbsp;</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'[SSL:&nbsp;CERTIFICATE_VERIFY_FAILED certificate&nbsp;verify&nbsp;failed:&nbsp;unable&nbsp;to&nbsp;get&nbsp;local&nbsp;issuer&nbsp;certificate'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span></code></pre></div>
<p>이러한 오류는 두 가지 방법 중 하나로 해결할 수 있습니다.</p>
<section id="trusted-host-옵션-사용" class="level3">
<h3 class="anchored" data-anchor-id="trusted-host-옵션-사용">1. <code>--trusted-host</code> 옵션 사용</h3>
<p>pip 명령을 실행할 때마다 다음과 같이 <code>--trusted-host</code> 옵션을 추가합니다.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--trusted-host</span> pypi.org <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--trusted-host</span> files.pythonhosted.org 설치하고자하는_패키지_이름</span></code></pre></div>
<p>만약 기본 패키지 레포지토리인 <code>pypi.org</code>, <code>files.pythonhosted.org</code> 이외의 레포지토리를 이용하는 경우에는 해다아는 레포지토리에 대한 옵션을 추가하면 됩니다. 예를 들어 pytorch 패키지 레포지토리 주소는 <code>download.pytorch.org</code>이므로 pytorch 패키지는 다음과 같이 설치할 수 있습니다.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--trusted-host</span> pypi.org <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--trusted-host</span> files.pythonhosted.org <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--trusted-host</span> download.pytorch.org torch</span></code></pre></div>
</section>
<section id="pip.ini-파일-사용" class="level3">
<h3 class="anchored" data-anchor-id="pip.ini-파일-사용">2. <code>pip.ini</code> 파일 사용</h3>
<p>pip 명령을 실행할 때마다 <code>--trusted-host</code> 옵션을 사용하기 귀찮은 경우에는 <code>사용자 홈 디렉토리</code> 아래에 <code>pip</code>라는 이름의 디렉토리를 만들고 다음과 같은 <code>pip.ini</code> 파일을 만들어 주면 pip 명령 실행시 <code>--trusted-host</code> 옵션을 추가하지 않아도 자동으로 적용됩니다.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource ini number-lines code-with-copy"><code class="sourceCode ini"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[global]</span></span>
<span id="cb6-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">trusted-host </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> pypi.org</span></span>
<span id="cb6-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">               files.pythonhosted.org</span></span>
<span id="cb6-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">               download.pytorch.org</span></span></code></pre></div>
<p><code>pip.ini</code> 파일은 다음 링크에서 다운로드 받을 수 있습니다.</p>
<ul>
<li><a href="pip.ini" target="_blank">pip.ini</a></li>
</ul>
</section>
</section>
<section id="pip-명령을-사용한-다수의-패키지-동시-설치" class="level2">
<h2 class="anchored" data-anchor-id="pip-명령을-사용한-다수의-패키지-동시-설치">pip 명령을 사용한 다수의 패키지 동시 설치</h2>
<p>설치하려는 패키지가 많은 경우에는 패키지 목록을 정리한 <code>requirements.txt</code> 파일을 pip 명령의 인수로 사용할 수 있습니다.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> requirements.txt</span></code></pre></div>
<p>위에서 추천하는 모든 패키지를 한꺼번에 설치하기 위해서는 위 링크에서 <code>requirements.txt</code> 파일을 다운로드 받아 프롬프트 창이 위치한 디렉토리에 복사한 후 <code>pip -r requirements.txt</code> 명령을 사용하면 됩니다.</p>
<div class="callout callout-style-default callout-important callout-titled" title="주의 사항">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
주의 사항
</div>
</div>
<div class="callout-body-container callout-body">
<p>위 링크에서 제공하는 패키지는 140개 이상으로 설치에 10분 이상의 오랜 시간이 걸릴 수 있습니다.</p>
</div>
</div>
</section>
<section id="설치된-패키지의-확인" class="level2">
<h2 class="anchored" data-anchor-id="설치된-패키지의-확인">설치된 패키지의 확인</h2>
<p><code>pip list</code> 명령을 실행하면 설치된 패키지의 목록을 확인할 수 있습니다.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> list</span></code></pre></div>
</section>
<section id="패키지-삭제" class="level2">
<h2 class="anchored" data-anchor-id="패키지-삭제">패키지 삭제</h2>
<p>패키지를 삭제하고자 하는 경우에는 다음과 같이 <code>pip uninstall</code> 명령을 사용할 수 있습니다.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> uninstall 제거하고자하는_패키지_이름 <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">제거하고자하는_패키지_이름</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>


</section>
</section>

 ]]></description>
  <category>환경구축</category>
  <category>Python</category>
  <guid>https://koscom.github.io/checkapi/posts/0003_env_install_2/</guid>
  <pubDate>Wed, 29 Nov 2023 15:00:00 GMT</pubDate>
  <media:content url="https://koscom.github.io/checkapi/posts/0003_env_install_2/pip_logo.png" medium="image" type="image/png" height="77" width="144"/>
</item>
<item>
  <title>웹사이트 소개</title>
  <link>https://koscom.github.io/checkapi/posts/0001_intro/</link>
  <description><![CDATA[ 




<section id="웹사이트-소개" class="level1 page-columns page-full">
<h1>웹사이트 소개</h1>
<p>본 웹사이트는 코스콤 CHECK-API 서비스를 활용하는 다양한 방법과 예제를 제공합니다.</p>
<section id="check-api-서비스" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="check-api-서비스">CHECK-API 서비스</h2>
<p>CHECK-API 서비스는 코스콤 CHECK 서비스의 금융 데이터를 체크 단말을 거치지 않고 직접 고객의 개인 컴퓨터나 서버에 REST-API 방식으로 제공하는 서비스 입니다.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0001_intro/check_api_service.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 1: CHECK-API 서비스</figcaption>
</figure>
</div>
<p>보다 자세한 내용과 신청 방법은 CHECK-API 서비스 소개 웹사이트에 있습니다.</p>
<ul>
<li>CHECK-API 서비스 소개 웹사이트 : <a href="https://checkapi.koscom.co.kr/" target="_blank">https://checkapi.koscom.co.kr/</a></li>
</ul>
</section>
<section id="check-api-서비스의-활용" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="check-api-서비스의-활용">CHECK-API 서비스의 활용</h2>
<p>CHECK-API 서비스를 사용하면 사용자가 직접 금융 데이터 원본을 대상으로 데이터 분석을 하거나 이를 활용한 분석 프로그램을 작성할 수 있습니다.</p>
<section id="예제-1-check-api를-이용한-간단한-대시보드" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="예제-1-check-api를-이용한-간단한-대시보드">예제 1: CHECK-API를 이용한 간단한 대시보드</h3>
<p>다음 화면은 CHECK-API를 사용하여 주식의 일간 차트를 그리는 간단한 대시보드 예제입니다.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0001_intro/video1.gif" class="img-fluid figure-img" style="width:100.0%"></p>
<figcaption class="margin-caption">그림 2: CHECK-API로 제작한 대시보드 프로그램 예제</figcaption>
</figure>
</div>
<p>참고로 본 대시보드 예제의 소스코드는 다음과 같습니다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> dash <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ds</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> kquant <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> kq</span>
<span id="cb1-3"></span>
<span id="cb1-4"></span>
<span id="cb1-5">df_symbol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kq.symbol_stock()[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]</span>
<span id="cb1-6">name_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_symbol.NAME.values</span>
<span id="cb1-7">symbol_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(df_symbol.NAME, df_symbol.SYMBOL))</span>
<span id="cb1-8">initial_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> name_list[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb1-9">initial_symbol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> symbol_dict[initial_name]</span>
<span id="cb1-10">initial_fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kq.chart_candle(kq.daily_stock(</span>
<span id="cb1-11">    initial_symbol), title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>initial_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-12"></span>
<span id="cb1-13">app <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ds.Dash()</span>
<span id="cb1-14"></span>
<span id="cb1-15">app.layout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ds.html.Div([</span>
<span id="cb1-16">    ds.html.H1(children<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"대시보드 예제"</span>, style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text-align"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>}),</span>
<span id="cb1-17">    ds.html.Div([</span>
<span id="cb1-18">        ds.html.Div([ds.dcc.Dropdown(name_list, initial_name, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dropdown-selection"</span>)],</span>
<span id="cb1-19">                    style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"width"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"300px"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"margin-top"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"60px"</span>}),</span>
<span id="cb1-20">        ds.html.Div([ds.dcc.Graph(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"candle"</span>, figure<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>initial_fig)],</span>
<span id="cb1-21">                    style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"width"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1200px"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"height"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"600px"</span>})</span>
<span id="cb1-22">    ], style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"display"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flex"</span>})</span>
<span id="cb1-23">])</span>
<span id="cb1-24"></span>
<span id="cb1-25"></span>
<span id="cb1-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@ds.callback</span>(</span>
<span id="cb1-27">    ds.Output(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"candle"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"figure"</span>),</span>
<span id="cb1-28">    ds.Input(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dropdown-selection"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>)</span>
<span id="cb1-29">)</span>
<span id="cb1-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update_graph(value):</span>
<span id="cb1-31">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kq.daily_stock(symbol_dict[value])</span>
<span id="cb1-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> kq.chart_candle(df, title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-33"></span>
<span id="cb1-34"></span>
<span id="cb1-35"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'__main__'</span>:</span>
<span id="cb1-36">    app.run(debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
</section>
<section id="예제-2-telegram과-check-api-연동" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="예제-2-telegram과-check-api-연동">예제 2 : Telegram과 CHECK-API 연동</h3>
<p>다음 화면은 CHECK-API를 Telegram과 연동하여 주식의 현재가격을 조회하거나 일간 차트를 그리는 간단한 예제입니다.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0001_intro/video2.gif" class="img-fluid figure-img" style="width:100.0%"></p>
<figcaption class="margin-caption">그림 3: Telegram과 CHECK-API 연동 예제</figcaption>
</figure>
</div>
</section>
</section>
<section id="본-웹사이트의-내용" class="level2">
<h2 class="anchored" data-anchor-id="본-웹사이트의-내용">본 웹사이트의 내용</h2>
<p>이러한 응용 프로그램을 제작하기 위해서는 파이썬이나 자바와 같은 프로그래밍 언어와 REST-API 호출 방법그리고 고급 분석을 위한 다양한 라이브러리를 쓸 수 있어야 합니다.</p>
<p>본 웹사이트에서는 CHECK-API 서비스를 보다 잘 활용하기 위해 프로그래밍 언어와 라이브러리 설치와 같은 기초부터 각종 고급 분석 예제 코드를 제공합니다.</p>
</section>
<section id="덧글-기능-사용" class="level2">
<h2 class="anchored" data-anchor-id="덧글-기능-사용">덧글 기능 사용</h2>
<p>본 블로그에서 덧글 기능을 사용하기 위해서는 github 서비스 계정으로 로그인하셔야 합니다. github 서비스 계정은 다음 웹사이트에서 무료로 생성할 수 있습니다.</p>
<ul>
<li><a href="https://github.com/" target="_blank">https://github.com/</a></li>
</ul>


</section>
</section>

 ]]></description>
  <category>뉴스</category>
  <guid>https://koscom.github.io/checkapi/posts/0001_intro/</guid>
  <pubDate>Tue, 21 Nov 2023 15:00:00 GMT</pubDate>
  <media:content url="https://koscom.github.io/checkapi/posts/0001_intro/check_api_service.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>환경 구축 1 : 파이썬 설치</title>
  <link>https://koscom.github.io/checkapi/posts/0002_env_install_1/</link>
  <description><![CDATA[ 




<section id="환경-구축-1-파이썬-설치" class="level1 page-columns page-full">
<h1>환경 구축 1 : 파이썬 설치</h1>
<p>코스콤 CHECK-API를 활용하기 위해 파이썬 언어 환경을 설치하는 방법을 설명합니다.</p>
<p>CHECK-API 서비스는 일반적인 REST-API 서비스이므로 파이썬, 자바, 자바스크립트 등 어떠한 프로그래밍 언어로도 사용할 수 있습니다. 여기에서는 가장 쉽고 데이터 분석에 많이 쓰이는 파이썬 언어를 기준으로 설명합니다.</p>
<p>파이썬 프로그래밍 언어로 CHECK-API를 활용하기 위해서는 다음과 같은 개발 환경 설치가 필요합니다.</p>
<ol type="1">
<li>파이썬 언어 환경</li>
<li>코드 개발 환경</li>
<li>파이썬 패키지</li>
</ol>
<p>이 글에서는 전체 개발 환경 설치의 첫번째 단계로 파이썬 언어 환경의 설치에 대해 설명합니다.</p>
<section id="miniforge-배포판-다운로드" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="miniforge-배포판-다운로드">Miniforge 배포판 다운로드</h2>
<p>파이썬 언어를 사용하기 위해서는 일단 파이썬 언어 환경 배포판(distribution)을 설치해야 합니다. 현재 다양한 파이썬 언어 환경 배포판이 있습니다만 그 중 가장 많이 사용되고 기업체에서 상용으로 사용할 수 있는 <strong>miniforge</strong>를 추천합니다. miniforge는 널리 사용되는 상업용 파이썬 배포판인 Anaconda사의 배포판과 호환되는 파이썬 언어 환경 배포판입니다. miniforge는 Anaconda사의 배포판과 달리 기업체에서도 비용없이 사용할 수 있습니다.</p>
<p>miniforge를 설치하기 위해서는 다음 홈페이지를 방문하여 보유한 운영체제에 맞는 설치 파일을 다운로드 받아야 합니다.</p>
<ul>
<li>miniforge: <a href="https://github.com/conda-forge/miniforge" target="_blank">https://github.com/conda-forge/miniforge</a></li>
</ul>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0002_env_install_1/miniforge_01.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 1: Miniforge 홈페이지</figcaption>
</figure>
</div>
<p>홈페이지의 아랫쪽에 다운로드를 위한 각 운영체제별 설치 파일 링크가 제공됩니다. 사용자의 운영체제에 맞는 파일을 다운로드 받습니다.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0002_env_install_1/miniforge_02.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 2: Miniforge 다운로드 화면</figcaption>
</figure>
</div>
</section>
<section id="miniforge-배포판-설치" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="miniforge-배포판-설치">Miniforge 배포판 설치</h2>
<p>윈도우 운영체제에서 Miniforge 설치 과정은 다음과 같습니다.</p>
<ol type="1">
<li>다운로드 화면에서 “Miniforge3-Windows-x86_64.exe” 파일을 다운로드 받습니다.</li>
</ol>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0002_env_install_1/miniforge_03.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 3: Miniforge 설치 파일 다운로드</figcaption>
</figure>
</div>
<ol start="2" type="1">
<li>다운로드 받은 파일을 더블 클릭하면 다음과 같이 설치 경고화면이 나옵니다. 이 때 “추가 정보” 링크를 클릭하면 설치를 진행할 수 있습니다.</li>
</ol>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0002_env_install_1/miniforge_04.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 4: 윈도우에서 Miniforge 실행파일 실행시 설치 경고 화면</figcaption>
</figure>
</div>
<ol start="3" type="1">
<li>다음과 같이 “실행” 버튼이 나타나면 클릭하여 설치를 진행합니다.</li>
</ol>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0002_env_install_1/miniforge_05.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 5: 윈도우에서 Miniforge 설치 시작 화면</figcaption>
</figure>
</div>
<ol start="4" type="1">
<li>다음은 설치 진행 화면입니다. 진행과정에서 특별한 수정이 필요하지 않다면 모두 “Next &gt;” 버튼을 눌러 통상적인 설치를 할 수 있습니다.</li>
</ol>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0002_env_install_1/miniforge_06.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 6: 윈도우에서 Miniforge 설치 진행 화면</figcaption>
</figure>
</div>
</section>
<section id="miniforge-프롬프트에서-파이썬-사용" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="miniforge-프롬프트에서-파이썬-사용">Miniforge 프롬프트에서 파이썬 사용</h2>
<ol type="1">
<li>설치가 정상적으로 완료되면 좌측 하단 윈도우 로고를 클릭하여 나오는 메뉴화면에 “Miniforge3”가 추가되어 있는 것을 확인할 수 있습니다. “Miniforge3” &gt; “Miniforge Prompt” 메뉴를 클릭하면 파이썬 실행용 Miniforge 프롬프트를 가동합니다.</li>
</ol>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0002_env_install_1/miniforge_07.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 7: 윈도우에서 Miniforge 실행 메뉴</figcaption>
</figure>
</div>
<ol start="2" type="1">
<li>다음 명령으로 파이썬 설치 경로를 확인합니다.</li>
</ol>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">where</span> python</span></code></pre></div>
<p>설치 경로가 <code>사용자 홈 디렉토리\miniforge3\python.exe</code>인 경우 정상적으로 설치된 것입니다.</p>
<p>만약 결과가 여러줄로 나오는 경우 이미 다른 종류의 파이썬 배포판이 설치 되어있는 것이며 정상적인 동작에는 영향을 미치 않으므로 무시해도 됩니다. 다만 <code>사용자 홈 디렉토리\miniforge3\python.exe</code> 설치 경로는 추후 개발 환경 설정에 필요하므로 메모해 두시는 것이 좋습니다.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0002_env_install_1/miniforge_08.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 8: 파이썬 경로 확인</figcaption>
</figure>
</div>
<ol start="3" type="1">
<li><code>python</code> 명령으로 파이썬 인터프리터를 시작할 수 있습니다. 파이썬 인터프리터를 종료할 때는 <code>exit()</code> 명령을 사용합니다.</li>
</ol>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0002_env_install_1/miniforge_09.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 9: 파이썬 실행</figcaption>
</figure>
</div>
</section>
<section id="추가사항-앱-실행-별칭-제거" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="추가사항-앱-실행-별칭-제거">(추가사항) “앱 실행 별칭” 제거</h2>
<p>만약 윈도우 환경에서 <code>where python</code>을 실행하였을 때 다음과 같은 항목이 나오면 “앱 실행 별칭” 설정이 되어 있는 경우입니다.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">C:\Users\사용자명\AppData\Local\Microsoft\windowsApps\python.exe</span></span></code></pre></div>
<p>“앱 실행 별칭” 설정이 되어 있으면 파이썬 명령을 사용할 때 윈도우 스토어(Store) 화면이 뜨면서 별도의 파이썬 설치를 요구하기 때문에 필요가 없는 경우에는 “앱 실행 별칭” 설정을 끄는 것을 권장합니다. “앱 실행 별칭” 설정을 끄는 방법은 다음과 같습니다.</p>
<ol type="1">
<li>좌측 하단의 윈도우 버튼을 클릭하여 “설정” 아이콘을 실행하거나 검색창에서 “설정”을 입력하여 설정화면을 실행합니다.</li>
</ol>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0002_env_install_1/turnoff_alias1.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 9: 설정 실행</figcaption>
</figure>
</div>
<ol start="2" type="1">
<li>설정화면에서 “앱” 메뉴를 클릭하여 앱 설정 화면으로 들어갑니다.</li>
</ol>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0002_env_install_1/turnoff_alias2.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 10: 앱 설정 화면</figcaption>
</figure>
</div>
<ol start="3" type="1">
<li>화면 중앙의 “앱 실행 별칭” 메뉴를 클릭하여 다음과 같은 화면이 나오면 <code>python.exe</code>, <code>python3.exe</code>, <code>python3.7.exe</code> 등의 항목에 대해 “끔”을 선택하면 됩니다.</li>
</ol>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0002_env_install_1/turnoff_alias3.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 11: 앱 실행 별칭 제거</figcaption>
</figure>
</div>
</section>
<section id="추가사항-명령-프롬프트에서-파이썬-사용" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="추가사항-명령-프롬프트에서-파이썬-사용">(추가사항) 명령 프롬프트에서 파이썬 사용</h2>
<p>Miniforge 배포판을 설치한 직후에는 Miniforge 프롬프트에서만 파이썬 사용이 가능합니다.</p>
<p>Miniforge 프롬프트 뿐 아니라 윈도우 기본 명령 프롬프트(cmd.exe)에서 파이썬을 사용하기 위해서는 추가 섦정이 필요합니다.</p>
<ol type="1">
<li>Miniforge 프롬프트(명령 프롬프트가 아닙니다.)를 열고 다음과 같은 명령을 실행합니다.</li>
</ol>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> init cmd.exe</span></code></pre></div>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0002_env_install_1/miniforge_10.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 12: conda init 설정</figcaption>
</figure>
</div>
<ol start="2" type="1">
<li>명령 프롬프트(Miniforge 프롬프트가 아닙니다.)를 열고 다음과 같은 명령을 실행합니다.</li>
</ol>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> activate</span></code></pre></div>
<p>화면의 프롬프트 앞에 <code>(base)</code>라는 글자가 나타나면 <code>python</code> 명령으로 파이썬을 실행할 수 있습니다.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://koscom.github.io/checkapi/posts/0002_env_install_1/miniforge_11.png" class="img-fluid figure-img"></p>
<figcaption class="margin-caption">그림 13: conda activate 실행</figcaption>
</figure>
</div>


</section>
</section>

 ]]></description>
  <category>환경구축</category>
  <category>Python</category>
  <guid>https://koscom.github.io/checkapi/posts/0002_env_install_1/</guid>
  <pubDate>Tue, 21 Nov 2023 15:00:00 GMT</pubDate>
  <media:content url="https://koscom.github.io/checkapi/posts/0002_env_install_1/miniforge_06.png" medium="image" type="image/png" height="81" width="144"/>
</item>
</channel>
</rss>
